{"ast":null,"code":"export default function abb(abbreviate) {\n  let state = 'state name';\n  if (abbreviate === 'AL') {\n    state = \"Alabama\";\n  } else if (abbreviate === 'AK') {\n    state = \"Alaska\";\n  } else if (abbreviate === 'AZ') {\n    state = \"Arizona\";\n  } else if (abbreviate === 'AR') {\n    state = \"Arkansas\";\n  } else if (abbreviate === 'CA') {\n    state = \"California\";\n  } else if (abbreviate === 'CO') {\n    state = \"Colorado\";\n  } else if (abbreviate === 'CT') {\n    state = \"Connecticut\";\n  } else if (abbreviate === 'DE') {\n    state = \"Delaware\";\n  } else if (abbreviate === 'FL') {\n    state = \"Florida\";\n  } else if (abbreviate === 'GA') {\n    state = \"Georgia\";\n  } else if (abbreviate === 'HI') {\n    state = \"Hawaii\";\n  } else if (abbreviate === 'ID') {\n    state = \"Idaho\";\n  } else if (abbreviate === 'IL') {\n    state = \"Illinois\";\n  } else if (abbreviate === 'IN') {\n    state = \"Indiana\";\n  } else if (abbreviate === 'IA') {\n    state = \"Iowa\";\n  } else if (abbreviate === 'KS') {\n    state = \"Kansas\";\n  } else if (abbreviate === 'KY') {\n    state = \"Kentucky\";\n  } else if (abbreviate === 'LA') {\n    state = \"Louisiana\";\n  } else if (abbreviate === 'ME') {\n    state = \"Maine\";\n  } else if (abbreviate === 'MD') {\n    state = \"Maryland\";\n  } else if (abbreviate === 'MA') {\n    state = \"Massachusetts\";\n  } else if (abbreviate === 'MI') {\n    state = \"Michigan\";\n  } else if (abbreviate === 'MN') {\n    state = \"Minnesota\";\n  } else if (abbreviate === 'MS') {\n    state = \"Mississippi\";\n  } else if (abbreviate === 'MO') {\n    state = \"Missouri\";\n  } else if (abbreviate === 'MT') {\n    state = \"Montana\";\n  } else if (abbreviate === 'NE') {\n    state = \"Nebraska\";\n  } else if (abbreviate === 'NV') {\n    state = \"Nevada\";\n  } else if (abbreviate === 'NH') {\n    state = \"New Hampshire\";\n  } else if (abbreviate === 'NJ') {\n    state = \"New Jersey\";\n  } else if (abbreviate === 'NM') {\n    state = \"New Mexico\";\n  } else if (abbreviate === 'NY') {\n    state = \"New York\";\n  } else if (abbreviate === 'NC') {\n    state = \"North Carolina\";\n  } else if (abbreviate === 'ND') {\n    state = \"North Dakota\";\n  } else if (abbreviate === 'OH') {\n    state = \"Ohio\";\n  } else if (abbreviate === 'OK') {\n    state = \"Oklahoma\";\n  } else if (abbreviate === 'OR') {\n    state = \"Oregon\";\n  } else if (abbreviate === 'PA') {\n    state = \"Pennsylvania\";\n  } else if (abbreviate === 'RI') {\n    state = \"Rhode Island\";\n  } else if (abbreviate === 'SC') {\n    state = \"South Carolina\";\n  } else if (abbreviate === 'SD') {\n    state = \"South Dakota\";\n  } else if (abbreviate === 'TN') {\n    state = \"Tennessee\";\n  } else if (abbreviate === 'TX') {\n    state = \"Texas\";\n  } else if (abbreviate === 'UT') {\n    state = \"Utah\";\n  } else if (abbreviate === 'VT') {\n    state = \"Vermont\";\n  } else if (abbreviate === 'VA') {\n    state = \"Virginia\";\n  } else if (abbreviate === 'WA') {\n    state = \"Washington\";\n  } else if (abbreviate === 'WV') {\n    state = \"West Virgina\";\n  } else if (abbreviate === 'WI') {\n    state = \"Wisconsin\";\n  } else if (abbreviate === 'WY') {\n    state = \"Wyoming\";\n  }\n  return state;\n}","map":{"version":3,"names":["abb","abbreviate","state"],"sources":["C:/Users/User/Downloads/MapleHacks/react-frontend/src/state_transfer.js"],"sourcesContent":["export default function abb (abbreviate){\r\n    let state = 'state name';\r\n    if (abbreviate === 'AL'){\r\n    state = \"Alabama\";\r\n    }else if (abbreviate === 'AK'){\r\n    state = \"Alaska\";\r\n    } else if (abbreviate === 'AZ'){\r\n    state = \"Arizona\";\r\n    } else if (abbreviate === 'AR'){\r\n    state = \"Arkansas\";\r\n    } else if (abbreviate === 'CA'){\r\n    state = \"California\";\r\n    } else if (abbreviate === 'CO'){\r\n    state = \"Colorado\";\r\n    } else if (abbreviate === 'CT'){\r\n    state = \"Connecticut\";\r\n    } else if (abbreviate === 'DE'){\r\n    state = \"Delaware\";\r\n    } else if (abbreviate === 'FL'){\r\n    state = \"Florida\";\r\n    } else if (abbreviate === 'GA'){\r\n    state = \"Georgia\";\r\n    } else if (abbreviate === 'HI'){\r\n    state = \"Hawaii\";\r\n    } else if (abbreviate === 'ID'){\r\n    state = \"Idaho\";\r\n    } else if (abbreviate === 'IL'){\r\n    state = \"Illinois\";\r\n    } else if (abbreviate === 'IN'){\r\n    state = \"Indiana\";\r\n    } else if (abbreviate === 'IA'){\r\n    state = \"Iowa\";\r\n    } else if (abbreviate === 'KS'){\r\n    state = \"Kansas\";\r\n    } else if (abbreviate === 'KY'){\r\n    state = \"Kentucky\";\r\n    } else if (abbreviate === 'LA'){\r\n    state = \"Louisiana\";\r\n    } else if (abbreviate === 'ME'){\r\n    state = \"Maine\";\r\n    } else if (abbreviate === 'MD'){\r\n    state = \"Maryland\";\r\n    } else if (abbreviate === 'MA'){\r\n    state = \"Massachusetts\";\r\n    } else if (abbreviate === 'MI'){\r\n    state = \"Michigan\";\r\n    } else if (abbreviate === 'MN'){\r\n    state = \"Minnesota\";\r\n    } else if (abbreviate === 'MS'){\r\n    state = \"Mississippi\";\r\n    } else if (abbreviate === 'MO'){\r\n    state = \"Missouri\";\r\n    } else if (abbreviate === 'MT'){\r\n    state = \"Montana\";\r\n    } else if (abbreviate === 'NE'){\r\n    state = \"Nebraska\";\r\n    } else if (abbreviate === 'NV'){\r\n    state = \"Nevada\";\r\n    } else if (abbreviate === 'NH'){\r\n    state = \"New Hampshire\";\r\n    } else if (abbreviate === 'NJ'){\r\n    state = \"New Jersey\";\r\n    } else if (abbreviate === 'NM'){\r\n    state = \"New Mexico\";\r\n    } else if (abbreviate === 'NY'){\r\n    state = \"New York\";\r\n    } else if (abbreviate === 'NC'){\r\n    state = \"North Carolina\";\r\n    } else if (abbreviate === 'ND'){\r\n    state = \"North Dakota\";\r\n    } else if (abbreviate === 'OH'){\r\n    state = \"Ohio\";\r\n    } else if (abbreviate === 'OK'){\r\n    state = \"Oklahoma\";\r\n    } else if (abbreviate === 'OR'){\r\n    state = \"Oregon\";\r\n    } else if (abbreviate === 'PA'){\r\n    state = \"Pennsylvania\";\r\n    } else if (abbreviate === 'RI'){\r\n    state = \"Rhode Island\";\r\n    } else if (abbreviate === 'SC'){\r\n    state = \"South Carolina\";\r\n    } else if (abbreviate === 'SD'){\r\n    state = \"South Dakota\";\r\n    } else if (abbreviate === 'TN'){\r\n    state = \"Tennessee\";\r\n    } else if (abbreviate === 'TX'){\r\n    state = \"Texas\";\r\n    } else if (abbreviate === 'UT'){\r\n    state = \"Utah\";\r\n    } else if (abbreviate === 'VT'){\r\n    state = \"Vermont\";\r\n    } else if (abbreviate === 'VA'){\r\n    state = \"Virginia\";\r\n    } else if (abbreviate === 'WA'){\r\n    state = \"Washington\";\r\n    } else if (abbreviate === 'WV'){\r\n    state = \"West Virgina\";\r\n    } else if (abbreviate === 'WI'){\r\n    state = \"Wisconsin\";\r\n    } else if (abbreviate === 'WY'){\r\n    state = \"Wyoming\";\r\n    }\r\n    return state;\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}