{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Downloads\\\\MapleHacks\\\\react-frontend\\\\src\\\\map.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef, useCallback } from \"react\";\nimport USAMap from \"react-usa-map\";\nimport statesJson from \"../states.json\";\nimport { styled } from \"@mui/material/styles\";\nimport Button from \"@mui/material/Button\";\nimport Box from \"@mui/material/Box\";\nimport Paper from \"@mui/material/Paper\";\nimport Grid from \"@mui/material/Unstable_Grid2\";\nimport Typography from \"@mui/material/Typography\";\n\n// http://www.worldlicenseplates.com/usa/US_USAX.html\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyPaper = styled(Paper)(_ref => {\n  let {\n    theme\n  } = _ref;\n  return {\n    backgroundColor: \"#fff\",\n    ...theme.typography.body2,\n    padding: theme.spacing(1),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary,\n    height: \"200px\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\"\n  };\n});\n_c = MyPaper;\nconst BoxButton = styled(Box)(_ref2 => {\n  let {\n    theme\n  } = _ref2;\n  return {\n    backgroundColor: \"#4db6ac\",\n    ...theme.typography.h5,\n    padding: theme.spacing(1),\n    margin: theme.spacing(1),\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    color: theme.palette.text.secondary,\n    height: \"100%\",\n    cursor: \"pointer\",\n    \"&:hover\": {\n      backgroundColor: \"#80cbc4\",\n      borderColor: \"#0062cc\",\n      boxShadow: \"none\"\n    }\n  };\n});\n_c2 = BoxButton;\nconst BoxButtonSub = styled(BoxButton)(_ref3 => {\n  let {\n    theme\n  } = _ref3;\n  return {\n    backgroundColor: \"#e57373\",\n    \"&:hover\": {\n      backgroundColor: \"#ef9a9a\",\n      borderColor: \"#0062cc\",\n      boxShadow: \"none\"\n    }\n  };\n});\n_c3 = BoxButtonSub;\nconst BoxButtonSub2 = styled(BoxButton)(_ref4 => {\n  let {\n    theme\n  } = _ref4;\n  return {\n    backgroundColor: \"#F4D03F\",\n    \"&:hover\": {\n      backgroundColor: \"#fff176\",\n      borderColor: \"#0062cc\",\n      boxShadow: \"none\"\n    }\n  };\n});\n_c4 = BoxButtonSub2;\nexport default function Map() {\n  _s();\n  const states = statesJson.data;\n  const defaultCondition = {\n    ongoing: false,\n    correctCnt: 0,\n    falseCnt: 0,\n    failed: false\n  };\n  const [condition, setCondition] = useState(defaultCondition);\n  const [quizArray, setQuizArray] = useState(states);\n  const [msg, setMsg] = useState(\"\");\n  const [qAbbreviation, setqAbbreviation] = useState(null);\n  const [colorMap, setColorMap] = useState({});\n  const [progNum, setProgNum] = useState(0);\n  const [count, setCount] = useState(0);\n  const [quizMode, setQuizMode] = useState(null);\n  const shuffle = _ref5 => {\n    let [...array] = _ref5;\n    for (let i = array.length - 1; i >= 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n    return array;\n  };\n  const intervalRef = useRef(null);\n  const startCount = useCallback(() => {\n    if (intervalRef.current !== null) {\n      return;\n    }\n    intervalRef.current = setInterval(() => {\n      setCount(c => c + 0.1);\n    }, 100);\n  }, []);\n  const stopCount = useCallback(() => {\n    if (intervalRef.current === null) {\n      return;\n    }\n    clearInterval(intervalRef.current);\n    intervalRef.current = null;\n  }, []);\n  useEffect(() => {\n    setQuizArray(quizArray => shuffle(quizArray));\n  }, []);\n  useEffect(() => {\n    setqAbbreviation(quizArray[progNum].attributes.abbreviation);\n  }, [quizArray, progNum]);\n\n  // 1回目は緑、2回目以降は黄色にする, 正解したかを返す\n  const fillWhenCorrect = (guess, failed) => {\n    let fillColor = \"#2ECC71\";\n    if (failed) fillColor = \"#F4D03F\";\n    let correct = false;\n    let newColorMap = colorMap;\n    if (quizMode === 1) {\n      highwayGroup.forEach(group => {\n        if (group.includes(guess)) {\n          if (group.includes(qAbbreviation)) {\n            correct = true;\n            group.forEach(st => {\n              newColorMap[st] = {\n                fill: fillColor\n              };\n            });\n          }\n        }\n      });\n    }\n    if (!correct) {\n      if (guess === qAbbreviation) {\n        correct = true;\n        newColorMap[guess] = {\n          fill: fillColor\n        };\n      }\n    }\n    setColorMap(newColorMap);\n    return correct;\n  };\n  const startSession = () => {\n    stopCount();\n    setCount(0);\n    setMsg(\"\");\n    setColorMap({});\n    setProgNum(0);\n    setCondition({\n      ...defaultCondition,\n      ongoing: true\n    });\n    startCount();\n  };\n  const resetSession = () => {\n    stopCount();\n    setCount(0);\n    setMsg(\"\");\n    setColorMap({});\n    setProgNum(0);\n    setCondition({\n      defaultCondition\n    });\n    setQuizArray(quizArray => shuffle(quizArray));\n  };\n  const endSession = () => {\n    stopCount();\n    setCondition(condition => ({\n      ...condition,\n      ongoing: false,\n      failed: false\n    }));\n    setQuizArray(quizArray => shuffle(quizArray));\n  };\n  const goNextOrEnd = () => {\n    let nextProgNum = progNum + 1;\n    if (nextProgNum === 50) {\n      nextProgNum = 0;\n      endSession();\n    }\n    setProgNum(nextProgNum);\n  };\n  const onMapClick = e => {\n    const {\n      ongoing,\n      correctCnt,\n      falseCnt,\n      failed\n    } = condition;\n    if (!ongoing) return;\n    const guessAbbreviation = e.target.dataset.name;\n    if (fillWhenCorrect(guessAbbreviation, failed)) {\n      setMsg(`It was ${quizArray[progNum].attributes.name}`);\n      if (failed) setCondition({\n        ...condition,\n        failed: false\n      });else {\n        setCondition({\n          ...condition,\n          correctCnt: correctCnt + 1\n        });\n      }\n      goNextOrEnd();\n    } else {\n      setMsg(`${guessAbbreviation} Not Correct!`);\n      if (!failed) {\n        setCondition({\n          ...condition,\n          falseCnt: falseCnt + 1,\n          failed: true\n        });\n      }\n    }\n  };\n  const onSkip = () => {\n    if (condition.ongoing) {\n      fillWhenCorrect(qAbbreviation, true);\n      const tmsg = `It was ${quizArray[progNum].attributes.name}`;\n      setMsg(tmsg);\n      const newFalseCnt = condition.falseCnt + 1;\n      setCondition(condition => ({\n        ...condition,\n        falseCnt: newFalseCnt,\n        failed: false\n      }));\n      goNextOrEnd();\n    }\n  };\n  const startHighway = () => {\n    setQuizMode(1);\n    startSession();\n  };\n  const startLicense = () => {\n    setQuizMode(2);\n    startSession();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h3\",\n      children: \"US 50 states Sign/Plate Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        flexGrow: 1\n      },\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          xs: 4,\n          children: condition.ongoing && qAbbreviation ? /*#__PURE__*/_jsxDEV(MyPaper, {\n            children: [/*#__PURE__*/_jsxDEV(BoxButtonSub, {\n              onClick: resetSession,\n              children: \"Reset\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(BoxButtonSub2, {\n              onClick: onSkip,\n              children: \"Show Answer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(MyPaper, {\n            children: [/*#__PURE__*/_jsxDEV(BoxButton, {\n              onClick: startHighway,\n              children: \"Highway Sign\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(BoxButton, {\n              onClick: startLicense,\n              children: \"License Plate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          xs: 4,\n          children: /*#__PURE__*/_jsxDEV(MyPaper, {\n            children: condition.ongoing && qAbbreviation ? quizMode === 1 ? /*#__PURE__*/_jsxDEV(\"img\", {\n              src: `/images/highway/${qAbbreviation}.PNG`,\n              alt: \"quizImage\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 19\n            }, this) : quizMode === 2 ? /*#__PURE__*/_jsxDEV(\"img\", {\n              src: `/images/license-plate/${qAbbreviation}.PNG`,\n              alt: \"quizImage\",\n              className: \"blur\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 19\n            }, this) : \"\" : \"waiting to start\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          xs: 4,\n          children: /*#__PURE__*/_jsxDEV(MyPaper, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              children: [\"Correct: \", condition.correctCnt]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              children: [\"Missed: \", condition.falseCnt]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              children: [\"Time: \", count.toFixed(1), \" s\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(USAMap, {\n      customize: colorMap,\n      onClick: onMapClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 233,\n    columnNumber: 5\n  }, this);\n}\n_s(Map, \"SywkMETky3YwHnK/IMo1qI8rJFA=\");\n_c5 = Map;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"MyPaper\");\n$RefreshReg$(_c2, \"BoxButton\");\n$RefreshReg$(_c3, \"BoxButtonSub\");\n$RefreshReg$(_c4, \"BoxButtonSub2\");\n$RefreshReg$(_c5, \"Map\");","map":{"version":3,"names":["React","useEffect","useState","useRef","useCallback","USAMap","statesJson","styled","Button","Box","Paper","Grid","Typography","jsxDEV","_jsxDEV","MyPaper","_ref","theme","backgroundColor","typography","body2","padding","spacing","textAlign","color","palette","text","secondary","height","display","flexDirection","justifyContent","_c","BoxButton","_ref2","h5","margin","alignItems","cursor","borderColor","boxShadow","_c2","BoxButtonSub","_ref3","_c3","BoxButtonSub2","_ref4","_c4","Map","_s","states","data","defaultCondition","ongoing","correctCnt","falseCnt","failed","condition","setCondition","quizArray","setQuizArray","msg","setMsg","qAbbreviation","setqAbbreviation","colorMap","setColorMap","progNum","setProgNum","count","setCount","quizMode","setQuizMode","shuffle","_ref5","array","i","length","j","Math","floor","random","intervalRef","startCount","current","setInterval","c","stopCount","clearInterval","attributes","abbreviation","fillWhenCorrect","guess","fillColor","correct","newColorMap","highwayGroup","forEach","group","includes","st","fill","startSession","resetSession","endSession","goNextOrEnd","nextProgNum","onMapClick","e","guessAbbreviation","target","dataset","name","onSkip","tmsg","newFalseCnt","startHighway","startLicense","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","sx","flexGrow","container","xs","onClick","src","alt","className","toFixed","customize","_c5","$RefreshReg$"],"sources":["C:/Users/User/Downloads/MapleHacks/react-frontend/src/map.jsx"],"sourcesContent":["import React, { useEffect, useState, useRef, useCallback } from \"react\";\r\nimport USAMap from \"react-usa-map\";\r\nimport statesJson from \"../states.json\";\r\n\r\nimport { styled } from \"@mui/material/styles\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport Grid from \"@mui/material/Unstable_Grid2\";\r\nimport Typography from \"@mui/material/Typography\";\r\n\r\n// http://www.worldlicenseplates.com/usa/US_USAX.html\r\n\r\nconst MyPaper = styled(Paper)(({ theme }) => ({\r\n  backgroundColor: \"#fff\",\r\n  ...theme.typography.body2,\r\n  padding: theme.spacing(1),\r\n  textAlign: \"center\",\r\n  color: theme.palette.text.secondary,\r\n  height: \"200px\",\r\n  display: \"flex\",\r\n  flexDirection: \"column\",\r\n  justifyContent: \"center\"\r\n}));\r\n\r\nconst BoxButton = styled(Box)(({ theme }) => ({\r\n  backgroundColor: \"#4db6ac\",\r\n  ...theme.typography.h5,\r\n  padding: theme.spacing(1),\r\n  margin: theme.spacing(1),\r\n  display: \"flex\",\r\n  justifyContent: \"center\",\r\n  alignItems: \"center\",\r\n  color: theme.palette.text.secondary,\r\n  height: \"100%\",\r\n  cursor: \"pointer\",\r\n  \"&:hover\": {\r\n    backgroundColor: \"#80cbc4\",\r\n    borderColor: \"#0062cc\",\r\n    boxShadow: \"none\"\r\n  }\r\n}));\r\n\r\nconst BoxButtonSub = styled(BoxButton)(({ theme }) => ({\r\n  backgroundColor: \"#e57373\",\r\n  \"&:hover\": {\r\n    backgroundColor: \"#ef9a9a\",\r\n    borderColor: \"#0062cc\",\r\n    boxShadow: \"none\"\r\n  }\r\n}));\r\n\r\nconst BoxButtonSub2 = styled(BoxButton)(({ theme }) => ({\r\n  backgroundColor: \"#F4D03F\",\r\n  \"&:hover\": {\r\n    backgroundColor: \"#fff176\",\r\n    borderColor: \"#0062cc\",\r\n    boxShadow: \"none\"\r\n  }\r\n}));\r\n\r\nexport default function Map() {\r\n  const states = statesJson.data;\r\n  const defaultCondition = {\r\n    ongoing: false,\r\n    correctCnt: 0,\r\n    falseCnt: 0,\r\n    failed: false\r\n  };\r\n  const [condition, setCondition] = useState(defaultCondition);\r\n  const [quizArray, setQuizArray] = useState(states);\r\n  const [msg, setMsg] = useState(\"\");\r\n  const [qAbbreviation, setqAbbreviation] = useState(null);\r\n  const [colorMap, setColorMap] = useState({});\r\n  const [progNum, setProgNum] = useState(0);\r\n  const [count, setCount] = useState(0);\r\n  const [quizMode, setQuizMode] = useState(null);\r\n\r\n  const shuffle = ([...array]) => {\r\n    for (let i = array.length - 1; i >= 0; i--) {\r\n      const j = Math.floor(Math.random() * (i + 1));\r\n      [array[i], array[j]] = [array[j], array[i]];\r\n    }\r\n    return array;\r\n  };\r\n\r\n  const intervalRef = useRef(null);\r\n  const startCount = useCallback(() => {\r\n    if (intervalRef.current !== null) {\r\n      return;\r\n    }\r\n    intervalRef.current = setInterval(() => {\r\n      setCount((c) => c + 0.1);\r\n    }, 100);\r\n  }, []);\r\n  const stopCount = useCallback(() => {\r\n    if (intervalRef.current === null) {\r\n      return;\r\n    }\r\n    clearInterval(intervalRef.current);\r\n    intervalRef.current = null;\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setQuizArray((quizArray) => shuffle(quizArray));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setqAbbreviation(quizArray[progNum].attributes.abbreviation);\r\n  }, [quizArray, progNum]);\r\n\r\n  // 1回目は緑、2回目以降は黄色にする, 正解したかを返す\r\n  const fillWhenCorrect = (guess, failed) => {\r\n    let fillColor = \"#2ECC71\";\r\n    if (failed) fillColor = \"#F4D03F\";\r\n\r\n    let correct = false;\r\n    let newColorMap = colorMap;\r\n\r\n    if (quizMode === 1) {\r\n      highwayGroup.forEach((group) => {\r\n        if (group.includes(guess)) {\r\n          if (group.includes(qAbbreviation)) {\r\n            correct = true;\r\n            group.forEach((st) => {\r\n              newColorMap[st] = { fill: fillColor };\r\n            });\r\n          }\r\n        }\r\n      });\r\n    }\r\n\r\n    if (!correct) {\r\n      if (guess === qAbbreviation) {\r\n        correct = true;\r\n        newColorMap[guess] = { fill: fillColor };\r\n      }\r\n    }\r\n    setColorMap(newColorMap);\r\n\r\n    return correct;\r\n  };\r\n\r\n  const startSession = () => {\r\n    stopCount();\r\n    setCount(0);\r\n    setMsg(\"\");\r\n    setColorMap({});\r\n    setProgNum(0);\r\n    setCondition({ ...defaultCondition, ongoing: true });\r\n    startCount();\r\n  };\r\n\r\n  const resetSession = () => {\r\n    stopCount();\r\n    setCount(0);\r\n    setMsg(\"\");\r\n    setColorMap({});\r\n    setProgNum(0);\r\n    setCondition({ defaultCondition });\r\n    setQuizArray((quizArray) => shuffle(quizArray));\r\n  };\r\n\r\n  const endSession = () => {\r\n    stopCount();\r\n    setCondition((condition) => ({\r\n      ...condition,\r\n      ongoing: false,\r\n      failed: false\r\n    }));\r\n    setQuizArray((quizArray) => shuffle(quizArray));\r\n  };\r\n\r\n  const goNextOrEnd = () => {\r\n    let nextProgNum = progNum + 1;\r\n    if (nextProgNum === 50) {\r\n      nextProgNum = 0;\r\n      endSession();\r\n    }\r\n    setProgNum(nextProgNum);\r\n  };\r\n\r\n  const onMapClick = (e) => {\r\n    const { ongoing, correctCnt, falseCnt, failed } = condition;\r\n    if (!ongoing) return;\r\n\r\n    const guessAbbreviation = e.target.dataset.name;\r\n    if (fillWhenCorrect(guessAbbreviation, failed)) {\r\n      setMsg(`It was ${quizArray[progNum].attributes.name}`);\r\n\r\n      if (failed) setCondition({ ...condition, failed: false });\r\n      else {\r\n        setCondition({\r\n          ...condition,\r\n          correctCnt: correctCnt + 1\r\n        });\r\n      }\r\n      goNextOrEnd();\r\n    } else {\r\n      setMsg(`${guessAbbreviation} Not Correct!`);\r\n      if (!failed) {\r\n        setCondition({ ...condition, falseCnt: falseCnt + 1, failed: true });\r\n      }\r\n    }\r\n  };\r\n\r\n  const onSkip = () => {\r\n    if (condition.ongoing) {\r\n      fillWhenCorrect(qAbbreviation, true);\r\n      const tmsg = `It was ${quizArray[progNum].attributes.name}`;\r\n      setMsg(tmsg);\r\n      const newFalseCnt = condition.falseCnt + 1;\r\n      setCondition((condition) => ({\r\n        ...condition,\r\n        falseCnt: newFalseCnt,\r\n        failed: false\r\n      }));\r\n      goNextOrEnd();\r\n    }\r\n  };\r\n\r\n  const startHighway = () => {\r\n    setQuizMode(1);\r\n    startSession();\r\n  };\r\n\r\n  const startLicense = () => {\r\n    setQuizMode(2);\r\n    startSession();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Typography variant=\"h3\">US 50 states Sign/Plate Quiz</Typography>\r\n      <Box sx={{ flexGrow: 1 }}>\r\n        <Grid container spacing={2}>\r\n          <Grid xs={4}>\r\n            {condition.ongoing && qAbbreviation ? (\r\n              <MyPaper>\r\n                <BoxButtonSub onClick={resetSession}>Reset</BoxButtonSub>\r\n                <BoxButtonSub2 onClick={onSkip}>Show Answer</BoxButtonSub2>\r\n              </MyPaper>\r\n            ) : (\r\n              <MyPaper>\r\n                <BoxButton onClick={startHighway}>Highway Sign</BoxButton>\r\n                <BoxButton onClick={startLicense}>License Plate</BoxButton>\r\n              </MyPaper>\r\n            )}\r\n          </Grid>\r\n          <Grid xs={4}>\r\n            <MyPaper>\r\n              {condition.ongoing && qAbbreviation ? (\r\n                quizMode === 1 ? (\r\n                  <img\r\n                    src={`/images/highway/${qAbbreviation}.PNG`}\r\n                    alt=\"quizImage\"\r\n                  />\r\n                ) : quizMode === 2 ? (\r\n                  <img\r\n                    src={`/images/license-plate/${qAbbreviation}.PNG`}\r\n                    alt=\"quizImage\"\r\n                    className=\"blur\"\r\n                  />\r\n                ) : (\r\n                  \"\"\r\n                )\r\n              ) : (\r\n                \"waiting to start\"\r\n              )}\r\n            </MyPaper>\r\n          </Grid>\r\n          <Grid xs={4}>\r\n            <MyPaper>\r\n              <Typography>Correct: {condition.correctCnt}</Typography>\r\n              <Typography>Missed: {condition.falseCnt}</Typography>\r\n              <Typography>Time: {count.toFixed(1)} s</Typography>\r\n            </MyPaper>\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n\r\n      {/* {msg} */}\r\n      <USAMap customize={colorMap} onClick={onMapClick} />\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,MAAM,EAAEC,WAAW,QAAQ,OAAO;AACvE,OAAOC,MAAM,MAAM,eAAe;AAClC,OAAOC,UAAU,MAAM,gBAAgB;AAEvC,SAASC,MAAM,QAAQ,sBAAsB;AAC7C,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,GAAG,MAAM,mBAAmB;AACnC,OAAOC,KAAK,MAAM,qBAAqB;AACvC,OAAOC,IAAI,MAAM,8BAA8B;AAC/C,OAAOC,UAAU,MAAM,0BAA0B;;AAEjD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,OAAO,GAAGR,MAAM,CAACG,KAAK,CAAC,CAACM,IAAA;EAAA,IAAC;IAAEC;EAAM,CAAC,GAAAD,IAAA;EAAA,OAAM;IAC5CE,eAAe,EAAE,MAAM;IACvB,GAAGD,KAAK,CAACE,UAAU,CAACC,KAAK;IACzBC,OAAO,EAAEJ,KAAK,CAACK,OAAO,CAAC,CAAC,CAAC;IACzBC,SAAS,EAAE,QAAQ;IACnBC,KAAK,EAAEP,KAAK,CAACQ,OAAO,CAACC,IAAI,CAACC,SAAS;IACnCC,MAAM,EAAE,OAAO;IACfC,OAAO,EAAE,MAAM;IACfC,aAAa,EAAE,QAAQ;IACvBC,cAAc,EAAE;EAClB,CAAC;AAAA,CAAC,CAAC;AAACC,EAAA,GAVEjB,OAAO;AAYb,MAAMkB,SAAS,GAAG1B,MAAM,CAACE,GAAG,CAAC,CAACyB,KAAA;EAAA,IAAC;IAAEjB;EAAM,CAAC,GAAAiB,KAAA;EAAA,OAAM;IAC5ChB,eAAe,EAAE,SAAS;IAC1B,GAAGD,KAAK,CAACE,UAAU,CAACgB,EAAE;IACtBd,OAAO,EAAEJ,KAAK,CAACK,OAAO,CAAC,CAAC,CAAC;IACzBc,MAAM,EAAEnB,KAAK,CAACK,OAAO,CAAC,CAAC,CAAC;IACxBO,OAAO,EAAE,MAAM;IACfE,cAAc,EAAE,QAAQ;IACxBM,UAAU,EAAE,QAAQ;IACpBb,KAAK,EAAEP,KAAK,CAACQ,OAAO,CAACC,IAAI,CAACC,SAAS;IACnCC,MAAM,EAAE,MAAM;IACdU,MAAM,EAAE,SAAS;IACjB,SAAS,EAAE;MACTpB,eAAe,EAAE,SAAS;MAC1BqB,WAAW,EAAE,SAAS;MACtBC,SAAS,EAAE;IACb;EACF,CAAC;AAAA,CAAC,CAAC;AAACC,GAAA,GAhBER,SAAS;AAkBf,MAAMS,YAAY,GAAGnC,MAAM,CAAC0B,SAAS,CAAC,CAACU,KAAA;EAAA,IAAC;IAAE1B;EAAM,CAAC,GAAA0B,KAAA;EAAA,OAAM;IACrDzB,eAAe,EAAE,SAAS;IAC1B,SAAS,EAAE;MACTA,eAAe,EAAE,SAAS;MAC1BqB,WAAW,EAAE,SAAS;MACtBC,SAAS,EAAE;IACb;EACF,CAAC;AAAA,CAAC,CAAC;AAACI,GAAA,GAPEF,YAAY;AASlB,MAAMG,aAAa,GAAGtC,MAAM,CAAC0B,SAAS,CAAC,CAACa,KAAA;EAAA,IAAC;IAAE7B;EAAM,CAAC,GAAA6B,KAAA;EAAA,OAAM;IACtD5B,eAAe,EAAE,SAAS;IAC1B,SAAS,EAAE;MACTA,eAAe,EAAE,SAAS;MAC1BqB,WAAW,EAAE,SAAS;MACtBC,SAAS,EAAE;IACb;EACF,CAAC;AAAA,CAAC,CAAC;AAACO,GAAA,GAPEF,aAAa;AASnB,eAAe,SAASG,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAC5B,MAAMC,MAAM,GAAG5C,UAAU,CAAC6C,IAAI;EAC9B,MAAMC,gBAAgB,GAAG;IACvBC,OAAO,EAAE,KAAK;IACdC,UAAU,EAAE,CAAC;IACbC,QAAQ,EAAE,CAAC;IACXC,MAAM,EAAE;EACV,CAAC;EACD,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGxD,QAAQ,CAACkD,gBAAgB,CAAC;EAC5D,MAAM,CAACO,SAAS,EAAEC,YAAY,CAAC,GAAG1D,QAAQ,CAACgD,MAAM,CAAC;EAClD,MAAM,CAACW,GAAG,EAAEC,MAAM,CAAC,GAAG5D,QAAQ,CAAC,EAAE,CAAC;EAClC,MAAM,CAAC6D,aAAa,EAAEC,gBAAgB,CAAC,GAAG9D,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAAC+D,QAAQ,EAAEC,WAAW,CAAC,GAAGhE,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC5C,MAAM,CAACiE,OAAO,EAAEC,UAAU,CAAC,GAAGlE,QAAQ,CAAC,CAAC,CAAC;EACzC,MAAM,CAACmE,KAAK,EAAEC,QAAQ,CAAC,GAAGpE,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACqE,QAAQ,EAAEC,WAAW,CAAC,GAAGtE,QAAQ,CAAC,IAAI,CAAC;EAE9C,MAAMuE,OAAO,GAAGC,KAAA,IAAgB;IAAA,IAAf,CAAC,GAAGC,KAAK,CAAC,GAAAD,KAAA;IACzB,KAAK,IAAIE,CAAC,GAAGD,KAAK,CAACE,MAAM,GAAG,CAAC,EAAED,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;MAC1C,MAAME,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,IAAIL,CAAC,GAAG,CAAC,CAAC,CAAC;MAC7C,CAACD,KAAK,CAACC,CAAC,CAAC,EAAED,KAAK,CAACG,CAAC,CAAC,CAAC,GAAG,CAACH,KAAK,CAACG,CAAC,CAAC,EAAEH,KAAK,CAACC,CAAC,CAAC,CAAC;IAC7C;IACA,OAAOD,KAAK;EACd,CAAC;EAED,MAAMO,WAAW,GAAG/E,MAAM,CAAC,IAAI,CAAC;EAChC,MAAMgF,UAAU,GAAG/E,WAAW,CAAC,MAAM;IACnC,IAAI8E,WAAW,CAACE,OAAO,KAAK,IAAI,EAAE;MAChC;IACF;IACAF,WAAW,CAACE,OAAO,GAAGC,WAAW,CAAC,MAAM;MACtCf,QAAQ,CAAEgB,CAAC,IAAKA,CAAC,GAAG,GAAG,CAAC;IAC1B,CAAC,EAAE,GAAG,CAAC;EACT,CAAC,EAAE,EAAE,CAAC;EACN,MAAMC,SAAS,GAAGnF,WAAW,CAAC,MAAM;IAClC,IAAI8E,WAAW,CAACE,OAAO,KAAK,IAAI,EAAE;MAChC;IACF;IACAI,aAAa,CAACN,WAAW,CAACE,OAAO,CAAC;IAClCF,WAAW,CAACE,OAAO,GAAG,IAAI;EAC5B,CAAC,EAAE,EAAE,CAAC;EAENnF,SAAS,CAAC,MAAM;IACd2D,YAAY,CAAED,SAAS,IAAKc,OAAO,CAACd,SAAS,CAAC,CAAC;EACjD,CAAC,EAAE,EAAE,CAAC;EAEN1D,SAAS,CAAC,MAAM;IACd+D,gBAAgB,CAACL,SAAS,CAACQ,OAAO,CAAC,CAACsB,UAAU,CAACC,YAAY,CAAC;EAC9D,CAAC,EAAE,CAAC/B,SAAS,EAAEQ,OAAO,CAAC,CAAC;;EAExB;EACA,MAAMwB,eAAe,GAAGA,CAACC,KAAK,EAAEpC,MAAM,KAAK;IACzC,IAAIqC,SAAS,GAAG,SAAS;IACzB,IAAIrC,MAAM,EAAEqC,SAAS,GAAG,SAAS;IAEjC,IAAIC,OAAO,GAAG,KAAK;IACnB,IAAIC,WAAW,GAAG9B,QAAQ;IAE1B,IAAIM,QAAQ,KAAK,CAAC,EAAE;MAClByB,YAAY,CAACC,OAAO,CAAEC,KAAK,IAAK;QAC9B,IAAIA,KAAK,CAACC,QAAQ,CAACP,KAAK,CAAC,EAAE;UACzB,IAAIM,KAAK,CAACC,QAAQ,CAACpC,aAAa,CAAC,EAAE;YACjC+B,OAAO,GAAG,IAAI;YACdI,KAAK,CAACD,OAAO,CAAEG,EAAE,IAAK;cACpBL,WAAW,CAACK,EAAE,CAAC,GAAG;gBAAEC,IAAI,EAAER;cAAU,CAAC;YACvC,CAAC,CAAC;UACJ;QACF;MACF,CAAC,CAAC;IACJ;IAEA,IAAI,CAACC,OAAO,EAAE;MACZ,IAAIF,KAAK,KAAK7B,aAAa,EAAE;QAC3B+B,OAAO,GAAG,IAAI;QACdC,WAAW,CAACH,KAAK,CAAC,GAAG;UAAES,IAAI,EAAER;QAAU,CAAC;MAC1C;IACF;IACA3B,WAAW,CAAC6B,WAAW,CAAC;IAExB,OAAOD,OAAO;EAChB,CAAC;EAED,MAAMQ,YAAY,GAAGA,CAAA,KAAM;IACzBf,SAAS,EAAE;IACXjB,QAAQ,CAAC,CAAC,CAAC;IACXR,MAAM,CAAC,EAAE,CAAC;IACVI,WAAW,CAAC,CAAC,CAAC,CAAC;IACfE,UAAU,CAAC,CAAC,CAAC;IACbV,YAAY,CAAC;MAAE,GAAGN,gBAAgB;MAAEC,OAAO,EAAE;IAAK,CAAC,CAAC;IACpD8B,UAAU,EAAE;EACd,CAAC;EAED,MAAMoB,YAAY,GAAGA,CAAA,KAAM;IACzBhB,SAAS,EAAE;IACXjB,QAAQ,CAAC,CAAC,CAAC;IACXR,MAAM,CAAC,EAAE,CAAC;IACVI,WAAW,CAAC,CAAC,CAAC,CAAC;IACfE,UAAU,CAAC,CAAC,CAAC;IACbV,YAAY,CAAC;MAAEN;IAAiB,CAAC,CAAC;IAClCQ,YAAY,CAAED,SAAS,IAAKc,OAAO,CAACd,SAAS,CAAC,CAAC;EACjD,CAAC;EAED,MAAM6C,UAAU,GAAGA,CAAA,KAAM;IACvBjB,SAAS,EAAE;IACX7B,YAAY,CAAED,SAAS,KAAM;MAC3B,GAAGA,SAAS;MACZJ,OAAO,EAAE,KAAK;MACdG,MAAM,EAAE;IACV,CAAC,CAAC,CAAC;IACHI,YAAY,CAAED,SAAS,IAAKc,OAAO,CAACd,SAAS,CAAC,CAAC;EACjD,CAAC;EAED,MAAM8C,WAAW,GAAGA,CAAA,KAAM;IACxB,IAAIC,WAAW,GAAGvC,OAAO,GAAG,CAAC;IAC7B,IAAIuC,WAAW,KAAK,EAAE,EAAE;MACtBA,WAAW,GAAG,CAAC;MACfF,UAAU,EAAE;IACd;IACApC,UAAU,CAACsC,WAAW,CAAC;EACzB,CAAC;EAED,MAAMC,UAAU,GAAIC,CAAC,IAAK;IACxB,MAAM;MAAEvD,OAAO;MAAEC,UAAU;MAAEC,QAAQ;MAAEC;IAAO,CAAC,GAAGC,SAAS;IAC3D,IAAI,CAACJ,OAAO,EAAE;IAEd,MAAMwD,iBAAiB,GAAGD,CAAC,CAACE,MAAM,CAACC,OAAO,CAACC,IAAI;IAC/C,IAAIrB,eAAe,CAACkB,iBAAiB,EAAErD,MAAM,CAAC,EAAE;MAC9CM,MAAM,CAAE,UAASH,SAAS,CAACQ,OAAO,CAAC,CAACsB,UAAU,CAACuB,IAAK,EAAC,CAAC;MAEtD,IAAIxD,MAAM,EAAEE,YAAY,CAAC;QAAE,GAAGD,SAAS;QAAED,MAAM,EAAE;MAAM,CAAC,CAAC,CAAC,KACrD;QACHE,YAAY,CAAC;UACX,GAAGD,SAAS;UACZH,UAAU,EAAEA,UAAU,GAAG;QAC3B,CAAC,CAAC;MACJ;MACAmD,WAAW,EAAE;IACf,CAAC,MAAM;MACL3C,MAAM,CAAE,GAAE+C,iBAAkB,eAAc,CAAC;MAC3C,IAAI,CAACrD,MAAM,EAAE;QACXE,YAAY,CAAC;UAAE,GAAGD,SAAS;UAAEF,QAAQ,EAAEA,QAAQ,GAAG,CAAC;UAAEC,MAAM,EAAE;QAAK,CAAC,CAAC;MACtE;IACF;EACF,CAAC;EAED,MAAMyD,MAAM,GAAGA,CAAA,KAAM;IACnB,IAAIxD,SAAS,CAACJ,OAAO,EAAE;MACrBsC,eAAe,CAAC5B,aAAa,EAAE,IAAI,CAAC;MACpC,MAAMmD,IAAI,GAAI,UAASvD,SAAS,CAACQ,OAAO,CAAC,CAACsB,UAAU,CAACuB,IAAK,EAAC;MAC3DlD,MAAM,CAACoD,IAAI,CAAC;MACZ,MAAMC,WAAW,GAAG1D,SAAS,CAACF,QAAQ,GAAG,CAAC;MAC1CG,YAAY,CAAED,SAAS,KAAM;QAC3B,GAAGA,SAAS;QACZF,QAAQ,EAAE4D,WAAW;QACrB3D,MAAM,EAAE;MACV,CAAC,CAAC,CAAC;MACHiD,WAAW,EAAE;IACf;EACF,CAAC;EAED,MAAMW,YAAY,GAAGA,CAAA,KAAM;IACzB5C,WAAW,CAAC,CAAC,CAAC;IACd8B,YAAY,EAAE;EAChB,CAAC;EAED,MAAMe,YAAY,GAAGA,CAAA,KAAM;IACzB7C,WAAW,CAAC,CAAC,CAAC;IACd8B,YAAY,EAAE;EAChB,CAAC;EAED,oBACExF,OAAA;IAAAwG,QAAA,gBACExG,OAAA,CAACF,UAAU;MAAC2G,OAAO,EAAC,IAAI;MAAAD,QAAA,EAAC;IAA4B;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAa,eAClE7G,OAAA,CAACL,GAAG;MAACmH,EAAE,EAAE;QAAEC,QAAQ,EAAE;MAAE,CAAE;MAAAP,QAAA,eACvBxG,OAAA,CAACH,IAAI;QAACmH,SAAS;QAACxG,OAAO,EAAE,CAAE;QAAAgG,QAAA,gBACzBxG,OAAA,CAACH,IAAI;UAACoH,EAAE,EAAE,CAAE;UAAAT,QAAA,EACT7D,SAAS,CAACJ,OAAO,IAAIU,aAAa,gBACjCjD,OAAA,CAACC,OAAO;YAAAuG,QAAA,gBACNxG,OAAA,CAAC4B,YAAY;cAACsF,OAAO,EAAEzB,YAAa;cAAAe,QAAA,EAAC;YAAK;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAAe,eACzD7G,OAAA,CAAC+B,aAAa;cAACmF,OAAO,EAAEf,MAAO;cAAAK,QAAA,EAAC;YAAW;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAAgB;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QACnD,gBAEV7G,OAAA,CAACC,OAAO;YAAAuG,QAAA,gBACNxG,OAAA,CAACmB,SAAS;cAAC+F,OAAO,EAAEZ,YAAa;cAAAE,QAAA,EAAC;YAAY;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAAY,eAC1D7G,OAAA,CAACmB,SAAS;cAAC+F,OAAO,EAAEX,YAAa;cAAAC,QAAA,EAAC;YAAa;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAAY;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QAE9D;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACI,eACP7G,OAAA,CAACH,IAAI;UAACoH,EAAE,EAAE,CAAE;UAAAT,QAAA,eACVxG,OAAA,CAACC,OAAO;YAAAuG,QAAA,EACL7D,SAAS,CAACJ,OAAO,IAAIU,aAAa,GACjCQ,QAAQ,KAAK,CAAC,gBACZzD,OAAA;cACEmH,GAAG,EAAG,mBAAkBlE,aAAc,MAAM;cAC5CmE,GAAG,EAAC;YAAW;cAAAV,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QACf,GACApD,QAAQ,KAAK,CAAC,gBAChBzD,OAAA;cACEmH,GAAG,EAAG,yBAAwBlE,aAAc,MAAM;cAClDmE,GAAG,EAAC,WAAW;cACfC,SAAS,EAAC;YAAM;cAAAX,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAChB,GAEF,EACD,GAED;UACD;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QACO;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACL,eACP7G,OAAA,CAACH,IAAI;UAACoH,EAAE,EAAE,CAAE;UAAAT,QAAA,eACVxG,OAAA,CAACC,OAAO;YAAAuG,QAAA,gBACNxG,OAAA,CAACF,UAAU;cAAA0G,QAAA,GAAC,WAAS,EAAC7D,SAAS,CAACH,UAAU;YAAA;cAAAkE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAAc,eACxD7G,OAAA,CAACF,UAAU;cAAA0G,QAAA,GAAC,UAAQ,EAAC7D,SAAS,CAACF,QAAQ;YAAA;cAAAiE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAAc,eACrD7G,OAAA,CAACF,UAAU;cAAA0G,QAAA,GAAC,QAAM,EAACjD,KAAK,CAAC+D,OAAO,CAAC,CAAC,CAAC,EAAC,IAAE;YAAA;cAAAZ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAAa;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QAC3C;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACL;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IACF;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACH,eAGN7G,OAAA,CAACT,MAAM;MAACgI,SAAS,EAAEpE,QAAS;MAAC+D,OAAO,EAAErB;IAAW;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAChD;AAEV;AAAC1E,EAAA,CAhOuBD,GAAG;AAAAsF,GAAA,GAAHtF,GAAG;AAAA,IAAAhB,EAAA,EAAAS,GAAA,EAAAG,GAAA,EAAAG,GAAA,EAAAuF,GAAA;AAAAC,YAAA,CAAAvG,EAAA;AAAAuG,YAAA,CAAA9F,GAAA;AAAA8F,YAAA,CAAA3F,GAAA;AAAA2F,YAAA,CAAAxF,GAAA;AAAAwF,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}