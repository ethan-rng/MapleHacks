{"ast":null,"code":"'use strict';\n\nvar utils = require('./../utils');\nvar settle = require('./../core/settle');\nvar buildFullPath = require('../core/buildFullPath');\nvar buildURL = require('./../helpers/buildURL');\nvar http = require('http');\nvar https = require('https');\nvar httpFollow = require('follow-redirects').http;\nvar httpsFollow = require('follow-redirects').https;\nvar url = require('url');\nvar zlib = require('zlib');\nvar VERSION = require('./../env/data').version;\nvar createError = require('../core/createError');\nvar enhanceError = require('../core/enhanceError');\nvar transitionalDefaults = require('../defaults/transitional');\nvar Cancel = require('../cancel/Cancel');\nvar isHttps = /https:?/;\n\n/**\n *\n * @param {http.ClientRequestArgs} options\n * @param {AxiosProxyConfig} proxy\n * @param {string} location\n */\nfunction setProxy(options, proxy, location) {\n  options.hostname = proxy.host;\n  options.host = proxy.host;\n  options.port = proxy.port;\n  options.path = location;\n\n  // Basic proxy authorization\n  if (proxy.auth) {\n    var base64 = Buffer.from(proxy.auth.username + ':' + proxy.auth.password, 'utf8').toString('base64');\n    options.headers['Proxy-Authorization'] = 'Basic ' + base64;\n  }\n\n  // If a proxy is used, any redirects must also pass through the proxy\n  options.beforeRedirect = function beforeRedirect(redirection) {\n    redirection.headers.host = redirection.host;\n    setProxy(redirection, proxy, redirection.href);\n  };\n}\n\n/*eslint consistent-return:0*/\nmodule.exports = function httpAdapter(config) {\n  return new Promise(function dispatchHttpRequest(resolvePromise, rejectPromise) {\n    var onCanceled;\n    function done() {\n      if (config.cancelToken) {\n        config.cancelToken.unsubscribe(onCanceled);\n      }\n      if (config.signal) {\n        config.signal.removeEventListener('abort', onCanceled);\n      }\n    }\n    var resolve = function resolve(value) {\n      done();\n      resolvePromise(value);\n    };\n    var rejected = false;\n    var reject = function reject(value) {\n      done();\n      rejected = true;\n      rejectPromise(value);\n    };\n    var data = config.data;\n    var headers = config.headers;\n    var headerNames = {};\n    Object.keys(headers).forEach(function storeLowerName(name) {\n      headerNames[name.toLowerCase()] = name;\n    });\n\n    // Set User-Agent (required by some servers)\n    // See https://github.com/axios/axios/issues/69\n    if ('user-agent' in headerNames) {\n      // User-Agent is specified; handle case where no UA header is desired\n      if (!headers[headerNames['user-agent']]) {\n        delete headers[headerNames['user-agent']];\n      }\n      // Otherwise, use specified value\n    } else {\n      // Only set header if it hasn't been set in config\n      headers['User-Agent'] = 'axios/' + VERSION;\n    }\n    if (data && !utils.isStream(data)) {\n      if (Buffer.isBuffer(data)) {\n        // Nothing to do...\n      } else if (utils.isArrayBuffer(data)) {\n        data = Buffer.from(new Uint8Array(data));\n      } else if (utils.isString(data)) {\n        data = Buffer.from(data, 'utf-8');\n      } else {\n        return reject(createError('Data after transformation must be a string, an ArrayBuffer, a Buffer, or a Stream', config));\n      }\n      if (config.maxBodyLength > -1 && data.length > config.maxBodyLength) {\n        return reject(createError('Request body larger than maxBodyLength limit', config));\n      }\n\n      // Add Content-Length header if data exists\n      if (!headerNames['content-length']) {\n        headers['Content-Length'] = data.length;\n      }\n    }\n\n    // HTTP basic authentication\n    var auth = undefined;\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password || '';\n      auth = username + ':' + password;\n    }\n\n    // Parse url\n    var fullPath = buildFullPath(config.baseURL, config.url);\n    var parsed = url.parse(fullPath);\n    var protocol = parsed.protocol || 'http:';\n    if (!auth && parsed.auth) {\n      var urlAuth = parsed.auth.split(':');\n      var urlUsername = urlAuth[0] || '';\n      var urlPassword = urlAuth[1] || '';\n      auth = urlUsername + ':' + urlPassword;\n    }\n    if (auth && headerNames.authorization) {\n      delete headers[headerNames.authorization];\n    }\n    var isHttpsRequest = isHttps.test(protocol);\n    var agent = isHttpsRequest ? config.httpsAgent : config.httpAgent;\n    try {\n      buildURL(parsed.path, config.params, config.paramsSerializer).replace(/^\\?/, '');\n    } catch (err) {\n      var customErr = new Error(err.message);\n      customErr.config = config;\n      customErr.url = config.url;\n      customErr.exists = true;\n      reject(customErr);\n    }\n    var options = {\n      path: buildURL(parsed.path, config.params, config.paramsSerializer).replace(/^\\?/, ''),\n      method: config.method.toUpperCase(),\n      headers: headers,\n      agent: agent,\n      agents: {\n        http: config.httpAgent,\n        https: config.httpsAgent\n      },\n      auth: auth\n    };\n    if (config.socketPath) {\n      options.socketPath = config.socketPath;\n    } else {\n      options.hostname = parsed.hostname;\n      options.port = parsed.port;\n    }\n    var proxy = config.proxy;\n    if (!proxy && proxy !== false) {\n      var proxyEnv = protocol.slice(0, -1) + '_proxy';\n      var proxyUrl = process.env[proxyEnv] || process.env[proxyEnv.toUpperCase()];\n      if (proxyUrl) {\n        var parsedProxyUrl = url.parse(proxyUrl);\n        var noProxyEnv = process.env.no_proxy || process.env.NO_PROXY;\n        var shouldProxy = true;\n        if (noProxyEnv) {\n          var noProxy = noProxyEnv.split(',').map(function trim(s) {\n            return s.trim();\n          });\n          shouldProxy = !noProxy.some(function proxyMatch(proxyElement) {\n            if (!proxyElement) {\n              return false;\n            }\n            if (proxyElement === '*') {\n              return true;\n            }\n            if (proxyElement[0] === '.' && parsed.hostname.substr(parsed.hostname.length - proxyElement.length) === proxyElement) {\n              return true;\n            }\n            return parsed.hostname === proxyElement;\n          });\n        }\n        if (shouldProxy) {\n          proxy = {\n            host: parsedProxyUrl.hostname,\n            port: parsedProxyUrl.port,\n            protocol: parsedProxyUrl.protocol\n          };\n          if (parsedProxyUrl.auth) {\n            var proxyUrlAuth = parsedProxyUrl.auth.split(':');\n            proxy.auth = {\n              username: proxyUrlAuth[0],\n              password: proxyUrlAuth[1]\n            };\n          }\n        }\n      }\n    }\n    if (proxy) {\n      options.headers.host = parsed.hostname + (parsed.port ? ':' + parsed.port : '');\n      setProxy(options, proxy, protocol + '//' + parsed.hostname + (parsed.port ? ':' + parsed.port : '') + options.path);\n    }\n    var transport;\n    var isHttpsProxy = isHttpsRequest && (proxy ? isHttps.test(proxy.protocol) : true);\n    if (config.transport) {\n      transport = config.transport;\n    } else if (config.maxRedirects === 0) {\n      transport = isHttpsProxy ? https : http;\n    } else {\n      if (config.maxRedirects) {\n        options.maxRedirects = config.maxRedirects;\n      }\n      transport = isHttpsProxy ? httpsFollow : httpFollow;\n    }\n    if (config.maxBodyLength > -1) {\n      options.maxBodyLength = config.maxBodyLength;\n    }\n    if (config.insecureHTTPParser) {\n      options.insecureHTTPParser = config.insecureHTTPParser;\n    }\n\n    // Create the request\n    var req = transport.request(options, function handleResponse(res) {\n      if (req.aborted) return;\n\n      // uncompress the response body transparently if required\n      var stream = res;\n\n      // return the last request in case of redirects\n      var lastRequest = res.req || req;\n\n      // if no content, is HEAD request or decompress disabled we should not decompress\n      if (res.statusCode !== 204 && lastRequest.method !== 'HEAD' && config.decompress !== false) {\n        switch (res.headers['content-encoding']) {\n          /*eslint default-case:0*/\n          case 'gzip':\n          case 'compress':\n          case 'deflate':\n            // add the unzipper to the body stream processing pipeline\n            stream = stream.pipe(zlib.createUnzip());\n\n            // remove the content-encoding in order to not confuse downstream operations\n            delete res.headers['content-encoding'];\n            break;\n        }\n      }\n      var response = {\n        status: res.statusCode,\n        statusText: res.statusMessage,\n        headers: res.headers,\n        config: config,\n        request: lastRequest\n      };\n      if (config.responseType === 'stream') {\n        response.data = stream;\n        settle(resolve, reject, response);\n      } else {\n        var responseBuffer = [];\n        var totalResponseBytes = 0;\n        stream.on('data', function handleStreamData(chunk) {\n          responseBuffer.push(chunk);\n          totalResponseBytes += chunk.length;\n\n          // make sure the content length is not over the maxContentLength if specified\n          if (config.maxContentLength > -1 && totalResponseBytes > config.maxContentLength) {\n            // stream.destoy() emit aborted event before calling reject() on Node.js v16\n            rejected = true;\n            stream.destroy();\n            reject(createError('maxContentLength size of ' + config.maxContentLength + ' exceeded', config, null, lastRequest));\n          }\n        });\n        stream.on('aborted', function handlerStreamAborted() {\n          if (rejected) {\n            return;\n          }\n          stream.destroy();\n          reject(createError('error request aborted', config, 'ERR_REQUEST_ABORTED', lastRequest));\n        });\n        stream.on('error', function handleStreamError(err) {\n          if (req.aborted) return;\n          reject(enhanceError(err, config, null, lastRequest));\n        });\n        stream.on('end', function handleStreamEnd() {\n          try {\n            var responseData = responseBuffer.length === 1 ? responseBuffer[0] : Buffer.concat(responseBuffer);\n            if (config.responseType !== 'arraybuffer') {\n              responseData = responseData.toString(config.responseEncoding);\n              if (!config.responseEncoding || config.responseEncoding === 'utf8') {\n                responseData = utils.stripBOM(responseData);\n              }\n            }\n            response.data = responseData;\n          } catch (err) {\n            reject(enhanceError(err, config, err.code, response.request, response));\n          }\n          settle(resolve, reject, response);\n        });\n      }\n    });\n\n    // Handle errors\n    req.on('error', function handleRequestError(err) {\n      if (req.aborted && err.code !== 'ERR_FR_TOO_MANY_REDIRECTS') return;\n      reject(enhanceError(err, config, null, req));\n    });\n\n    // set tcp keep alive to prevent drop connection by peer\n    req.on('socket', function handleRequestSocket(socket) {\n      // default interval of sending ack packet is 1 minute\n      socket.setKeepAlive(true, 1000 * 60);\n    });\n\n    // Handle request timeout\n    if (config.timeout) {\n      // This is forcing a int timeout to avoid problems if the `req` interface doesn't handle other types.\n      var timeout = parseInt(config.timeout, 10);\n      if (isNaN(timeout)) {\n        reject(createError('error trying to parse `config.timeout` to int', config, 'ERR_PARSE_TIMEOUT', req));\n        return;\n      }\n\n      // Sometime, the response will be very slow, and does not respond, the connect event will be block by event loop system.\n      // And timer callback will be fired, and abort() will be invoked before connection, then get \"socket hang up\" and code ECONNRESET.\n      // At this time, if we have a large number of request, nodejs will hang up some socket on background. and the number will up and up.\n      // And then these socket which be hang up will devoring CPU little by little.\n      // ClientRequest.setTimeout will be fired on the specify milliseconds, and can make sure that abort() will be fired after connect.\n      req.setTimeout(timeout, function handleRequestTimeout() {\n        req.abort();\n        var timeoutErrorMessage = '';\n        if (config.timeoutErrorMessage) {\n          timeoutErrorMessage = config.timeoutErrorMessage;\n        } else {\n          timeoutErrorMessage = 'timeout of ' + config.timeout + 'ms exceeded';\n        }\n        var transitional = config.transitional || transitionalDefaults;\n        reject(createError(timeoutErrorMessage, config, transitional.clarifyTimeoutError ? 'ETIMEDOUT' : 'ECONNABORTED', req));\n      });\n    }\n    if (config.cancelToken || config.signal) {\n      // Handle cancellation\n      // eslint-disable-next-line func-names\n      onCanceled = function (cancel) {\n        if (req.aborted) return;\n        req.abort();\n        reject(!cancel || cancel && cancel.type ? new Cancel('canceled') : cancel);\n      };\n      config.cancelToken && config.cancelToken.subscribe(onCanceled);\n      if (config.signal) {\n        config.signal.aborted ? onCanceled() : config.signal.addEventListener('abort', onCanceled);\n      }\n    }\n\n    // Send the request\n    if (utils.isStream(data)) {\n      data.on('error', function handleStreamError(err) {\n        reject(enhanceError(err, config, null, req));\n      }).pipe(req);\n    } else {\n      req.end(data);\n    }\n  });\n};","map":{"version":3,"names":["utils","require","settle","buildFullPath","buildURL","http","https","httpFollow","httpsFollow","url","zlib","VERSION","version","createError","enhanceError","transitionalDefaults","Cancel","isHttps","setProxy","options","proxy","location","hostname","host","port","path","auth","base64","Buffer","from","username","password","toString","headers","beforeRedirect","redirection","href","module","exports","httpAdapter","config","Promise","dispatchHttpRequest","resolvePromise","rejectPromise","onCanceled","done","cancelToken","unsubscribe","signal","removeEventListener","resolve","value","rejected","reject","data","headerNames","Object","keys","forEach","storeLowerName","name","toLowerCase","isStream","isBuffer","isArrayBuffer","Uint8Array","isString","maxBodyLength","length","undefined","fullPath","baseURL","parsed","parse","protocol","urlAuth","split","urlUsername","urlPassword","authorization","isHttpsRequest","test","agent","httpsAgent","httpAgent","params","paramsSerializer","replace","err","customErr","Error","message","exists","method","toUpperCase","agents","socketPath","proxyEnv","slice","proxyUrl","process","env","parsedProxyUrl","noProxyEnv","no_proxy","NO_PROXY","shouldProxy","noProxy","map","trim","s","some","proxyMatch","proxyElement","substr","proxyUrlAuth","transport","isHttpsProxy","maxRedirects","insecureHTTPParser","req","request","handleResponse","res","aborted","stream","lastRequest","statusCode","decompress","pipe","createUnzip","response","status","statusText","statusMessage","responseType","responseBuffer","totalResponseBytes","on","handleStreamData","chunk","push","maxContentLength","destroy","handlerStreamAborted","handleStreamError","handleStreamEnd","responseData","concat","responseEncoding","stripBOM","code","handleRequestError","handleRequestSocket","socket","setKeepAlive","timeout","parseInt","isNaN","setTimeout","handleRequestTimeout","abort","timeoutErrorMessage","transitional","clarifyTimeoutError","cancel","type","subscribe","addEventListener","end"],"sources":["C:/Users/User/Downloads/MapleHacks/react-frontend/node_modules/axios/lib/adapters/http.js"],"sourcesContent":["'use strict';\n\nvar utils = require('./../utils');\nvar settle = require('./../core/settle');\nvar buildFullPath = require('../core/buildFullPath');\nvar buildURL = require('./../helpers/buildURL');\nvar http = require('http');\nvar https = require('https');\nvar httpFollow = require('follow-redirects').http;\nvar httpsFollow = require('follow-redirects').https;\nvar url = require('url');\nvar zlib = require('zlib');\nvar VERSION = require('./../env/data').version;\nvar createError = require('../core/createError');\nvar enhanceError = require('../core/enhanceError');\nvar transitionalDefaults = require('../defaults/transitional');\nvar Cancel = require('../cancel/Cancel');\n\nvar isHttps = /https:?/;\n\n/**\n *\n * @param {http.ClientRequestArgs} options\n * @param {AxiosProxyConfig} proxy\n * @param {string} location\n */\nfunction setProxy(options, proxy, location) {\n  options.hostname = proxy.host;\n  options.host = proxy.host;\n  options.port = proxy.port;\n  options.path = location;\n\n  // Basic proxy authorization\n  if (proxy.auth) {\n    var base64 = Buffer.from(proxy.auth.username + ':' + proxy.auth.password, 'utf8').toString('base64');\n    options.headers['Proxy-Authorization'] = 'Basic ' + base64;\n  }\n\n  // If a proxy is used, any redirects must also pass through the proxy\n  options.beforeRedirect = function beforeRedirect(redirection) {\n    redirection.headers.host = redirection.host;\n    setProxy(redirection, proxy, redirection.href);\n  };\n}\n\n/*eslint consistent-return:0*/\nmodule.exports = function httpAdapter(config) {\n  return new Promise(function dispatchHttpRequest(resolvePromise, rejectPromise) {\n    var onCanceled;\n    function done() {\n      if (config.cancelToken) {\n        config.cancelToken.unsubscribe(onCanceled);\n      }\n\n      if (config.signal) {\n        config.signal.removeEventListener('abort', onCanceled);\n      }\n    }\n    var resolve = function resolve(value) {\n      done();\n      resolvePromise(value);\n    };\n    var rejected = false;\n    var reject = function reject(value) {\n      done();\n      rejected = true;\n      rejectPromise(value);\n    };\n    var data = config.data;\n    var headers = config.headers;\n    var headerNames = {};\n\n    Object.keys(headers).forEach(function storeLowerName(name) {\n      headerNames[name.toLowerCase()] = name;\n    });\n\n    // Set User-Agent (required by some servers)\n    // See https://github.com/axios/axios/issues/69\n    if ('user-agent' in headerNames) {\n      // User-Agent is specified; handle case where no UA header is desired\n      if (!headers[headerNames['user-agent']]) {\n        delete headers[headerNames['user-agent']];\n      }\n      // Otherwise, use specified value\n    } else {\n      // Only set header if it hasn't been set in config\n      headers['User-Agent'] = 'axios/' + VERSION;\n    }\n\n    if (data && !utils.isStream(data)) {\n      if (Buffer.isBuffer(data)) {\n        // Nothing to do...\n      } else if (utils.isArrayBuffer(data)) {\n        data = Buffer.from(new Uint8Array(data));\n      } else if (utils.isString(data)) {\n        data = Buffer.from(data, 'utf-8');\n      } else {\n        return reject(createError(\n          'Data after transformation must be a string, an ArrayBuffer, a Buffer, or a Stream',\n          config\n        ));\n      }\n\n      if (config.maxBodyLength > -1 && data.length > config.maxBodyLength) {\n        return reject(createError('Request body larger than maxBodyLength limit', config));\n      }\n\n      // Add Content-Length header if data exists\n      if (!headerNames['content-length']) {\n        headers['Content-Length'] = data.length;\n      }\n    }\n\n    // HTTP basic authentication\n    var auth = undefined;\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password || '';\n      auth = username + ':' + password;\n    }\n\n    // Parse url\n    var fullPath = buildFullPath(config.baseURL, config.url);\n    var parsed = url.parse(fullPath);\n    var protocol = parsed.protocol || 'http:';\n\n    if (!auth && parsed.auth) {\n      var urlAuth = parsed.auth.split(':');\n      var urlUsername = urlAuth[0] || '';\n      var urlPassword = urlAuth[1] || '';\n      auth = urlUsername + ':' + urlPassword;\n    }\n\n    if (auth && headerNames.authorization) {\n      delete headers[headerNames.authorization];\n    }\n\n    var isHttpsRequest = isHttps.test(protocol);\n    var agent = isHttpsRequest ? config.httpsAgent : config.httpAgent;\n\n    try {\n      buildURL(parsed.path, config.params, config.paramsSerializer).replace(/^\\?/, '');\n    } catch (err) {\n      var customErr = new Error(err.message);\n      customErr.config = config;\n      customErr.url = config.url;\n      customErr.exists = true;\n      reject(customErr);\n    }\n\n    var options = {\n      path: buildURL(parsed.path, config.params, config.paramsSerializer).replace(/^\\?/, ''),\n      method: config.method.toUpperCase(),\n      headers: headers,\n      agent: agent,\n      agents: { http: config.httpAgent, https: config.httpsAgent },\n      auth: auth\n    };\n\n    if (config.socketPath) {\n      options.socketPath = config.socketPath;\n    } else {\n      options.hostname = parsed.hostname;\n      options.port = parsed.port;\n    }\n\n    var proxy = config.proxy;\n    if (!proxy && proxy !== false) {\n      var proxyEnv = protocol.slice(0, -1) + '_proxy';\n      var proxyUrl = process.env[proxyEnv] || process.env[proxyEnv.toUpperCase()];\n      if (proxyUrl) {\n        var parsedProxyUrl = url.parse(proxyUrl);\n        var noProxyEnv = process.env.no_proxy || process.env.NO_PROXY;\n        var shouldProxy = true;\n\n        if (noProxyEnv) {\n          var noProxy = noProxyEnv.split(',').map(function trim(s) {\n            return s.trim();\n          });\n\n          shouldProxy = !noProxy.some(function proxyMatch(proxyElement) {\n            if (!proxyElement) {\n              return false;\n            }\n            if (proxyElement === '*') {\n              return true;\n            }\n            if (proxyElement[0] === '.' &&\n                parsed.hostname.substr(parsed.hostname.length - proxyElement.length) === proxyElement) {\n              return true;\n            }\n\n            return parsed.hostname === proxyElement;\n          });\n        }\n\n        if (shouldProxy) {\n          proxy = {\n            host: parsedProxyUrl.hostname,\n            port: parsedProxyUrl.port,\n            protocol: parsedProxyUrl.protocol\n          };\n\n          if (parsedProxyUrl.auth) {\n            var proxyUrlAuth = parsedProxyUrl.auth.split(':');\n            proxy.auth = {\n              username: proxyUrlAuth[0],\n              password: proxyUrlAuth[1]\n            };\n          }\n        }\n      }\n    }\n\n    if (proxy) {\n      options.headers.host = parsed.hostname + (parsed.port ? ':' + parsed.port : '');\n      setProxy(options, proxy, protocol + '//' + parsed.hostname + (parsed.port ? ':' + parsed.port : '') + options.path);\n    }\n\n    var transport;\n    var isHttpsProxy = isHttpsRequest && (proxy ? isHttps.test(proxy.protocol) : true);\n    if (config.transport) {\n      transport = config.transport;\n    } else if (config.maxRedirects === 0) {\n      transport = isHttpsProxy ? https : http;\n    } else {\n      if (config.maxRedirects) {\n        options.maxRedirects = config.maxRedirects;\n      }\n      transport = isHttpsProxy ? httpsFollow : httpFollow;\n    }\n\n    if (config.maxBodyLength > -1) {\n      options.maxBodyLength = config.maxBodyLength;\n    }\n\n    if (config.insecureHTTPParser) {\n      options.insecureHTTPParser = config.insecureHTTPParser;\n    }\n\n    // Create the request\n    var req = transport.request(options, function handleResponse(res) {\n      if (req.aborted) return;\n\n      // uncompress the response body transparently if required\n      var stream = res;\n\n      // return the last request in case of redirects\n      var lastRequest = res.req || req;\n\n\n      // if no content, is HEAD request or decompress disabled we should not decompress\n      if (res.statusCode !== 204 && lastRequest.method !== 'HEAD' && config.decompress !== false) {\n        switch (res.headers['content-encoding']) {\n        /*eslint default-case:0*/\n        case 'gzip':\n        case 'compress':\n        case 'deflate':\n        // add the unzipper to the body stream processing pipeline\n          stream = stream.pipe(zlib.createUnzip());\n\n          // remove the content-encoding in order to not confuse downstream operations\n          delete res.headers['content-encoding'];\n          break;\n        }\n      }\n\n      var response = {\n        status: res.statusCode,\n        statusText: res.statusMessage,\n        headers: res.headers,\n        config: config,\n        request: lastRequest\n      };\n\n      if (config.responseType === 'stream') {\n        response.data = stream;\n        settle(resolve, reject, response);\n      } else {\n        var responseBuffer = [];\n        var totalResponseBytes = 0;\n        stream.on('data', function handleStreamData(chunk) {\n          responseBuffer.push(chunk);\n          totalResponseBytes += chunk.length;\n\n          // make sure the content length is not over the maxContentLength if specified\n          if (config.maxContentLength > -1 && totalResponseBytes > config.maxContentLength) {\n            // stream.destoy() emit aborted event before calling reject() on Node.js v16\n            rejected = true;\n            stream.destroy();\n            reject(createError('maxContentLength size of ' + config.maxContentLength + ' exceeded',\n              config, null, lastRequest));\n          }\n        });\n\n        stream.on('aborted', function handlerStreamAborted() {\n          if (rejected) {\n            return;\n          }\n          stream.destroy();\n          reject(createError('error request aborted', config, 'ERR_REQUEST_ABORTED', lastRequest));\n        });\n\n        stream.on('error', function handleStreamError(err) {\n          if (req.aborted) return;\n          reject(enhanceError(err, config, null, lastRequest));\n        });\n\n        stream.on('end', function handleStreamEnd() {\n          try {\n            var responseData = responseBuffer.length === 1 ? responseBuffer[0] : Buffer.concat(responseBuffer);\n            if (config.responseType !== 'arraybuffer') {\n              responseData = responseData.toString(config.responseEncoding);\n              if (!config.responseEncoding || config.responseEncoding === 'utf8') {\n                responseData = utils.stripBOM(responseData);\n              }\n            }\n            response.data = responseData;\n          } catch (err) {\n            reject(enhanceError(err, config, err.code, response.request, response));\n          }\n          settle(resolve, reject, response);\n        });\n      }\n    });\n\n    // Handle errors\n    req.on('error', function handleRequestError(err) {\n      if (req.aborted && err.code !== 'ERR_FR_TOO_MANY_REDIRECTS') return;\n      reject(enhanceError(err, config, null, req));\n    });\n\n    // set tcp keep alive to prevent drop connection by peer\n    req.on('socket', function handleRequestSocket(socket) {\n      // default interval of sending ack packet is 1 minute\n      socket.setKeepAlive(true, 1000 * 60);\n    });\n\n    // Handle request timeout\n    if (config.timeout) {\n      // This is forcing a int timeout to avoid problems if the `req` interface doesn't handle other types.\n      var timeout = parseInt(config.timeout, 10);\n\n      if (isNaN(timeout)) {\n        reject(createError(\n          'error trying to parse `config.timeout` to int',\n          config,\n          'ERR_PARSE_TIMEOUT',\n          req\n        ));\n\n        return;\n      }\n\n      // Sometime, the response will be very slow, and does not respond, the connect event will be block by event loop system.\n      // And timer callback will be fired, and abort() will be invoked before connection, then get \"socket hang up\" and code ECONNRESET.\n      // At this time, if we have a large number of request, nodejs will hang up some socket on background. and the number will up and up.\n      // And then these socket which be hang up will devoring CPU little by little.\n      // ClientRequest.setTimeout will be fired on the specify milliseconds, and can make sure that abort() will be fired after connect.\n      req.setTimeout(timeout, function handleRequestTimeout() {\n        req.abort();\n        var timeoutErrorMessage = '';\n        if (config.timeoutErrorMessage) {\n          timeoutErrorMessage = config.timeoutErrorMessage;\n        } else {\n          timeoutErrorMessage = 'timeout of ' + config.timeout + 'ms exceeded';\n        }\n        var transitional = config.transitional || transitionalDefaults;\n        reject(createError(\n          timeoutErrorMessage,\n          config,\n          transitional.clarifyTimeoutError ? 'ETIMEDOUT' : 'ECONNABORTED',\n          req\n        ));\n      });\n    }\n\n    if (config.cancelToken || config.signal) {\n      // Handle cancellation\n      // eslint-disable-next-line func-names\n      onCanceled = function(cancel) {\n        if (req.aborted) return;\n\n        req.abort();\n        reject(!cancel || (cancel && cancel.type) ? new Cancel('canceled') : cancel);\n      };\n\n      config.cancelToken && config.cancelToken.subscribe(onCanceled);\n      if (config.signal) {\n        config.signal.aborted ? onCanceled() : config.signal.addEventListener('abort', onCanceled);\n      }\n    }\n\n\n    // Send the request\n    if (utils.isStream(data)) {\n      data.on('error', function handleStreamError(err) {\n        reject(enhanceError(err, config, null, req));\n      }).pipe(req);\n    } else {\n      req.end(data);\n    }\n  });\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}