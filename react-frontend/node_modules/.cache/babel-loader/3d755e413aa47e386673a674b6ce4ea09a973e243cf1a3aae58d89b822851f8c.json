{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Downloads\\\\MapleHacks\\\\react-frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport React, { useEffect, useState } from \"react\";\nimport USAMap from \"react-usa-map\";\nimport abb from \"./state_transfer\";\nimport data from \"./data_display\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  let gpt_response = \"HAIDHOWAHI\";\n  const [gptResult, setgptResult] = useState(\"Info From Chat Here!\");\n  async function callgpt(input) {\n    const {\n      Configuration,\n      OpenAIApi\n    } = require(\"openai\");\n    const configuration = new Configuration({\n      apiKey: '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'\n    });\n    const openai = new OpenAIApi(configuration);\n    const msg = input;\n    const completion = await openai.createChatCompletion({\n      model: \"gpt-3.5-turbo\",\n      messages: [{\n        role: \"user\",\n        content: msg\n      }]\n    });\n    const response = completion.data.choices[0].message.content;\n    console.log(completion.data.choices[0].message.content);\n    gpt_response = response;\n    const name = document.createTextNode(gpt_response);\n    setgptResult(name);\n  }\n  ;\n  const [text, setText] = useState('insert state');\n  const handleClick = event => {\n    let abbreviate = event.target.dataset.name;\n    setText(abb(abbreviate));\n    callgpt(abb(abbreviate));\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"website\",\n      className: \"container-center-horizontal\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        id: \"title\",\n        children: \"Meal Mapper\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"map\",\n      children: /*#__PURE__*/_jsxDEV(USAMap, {\n        onClick: handleClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      id: \"gpt_result\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"data\", {\n      state: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"Ay+YEOgIKNgouDFVKwcfoyOqBUY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","USAMap","abb","data","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","gpt_response","gptResult","setgptResult","callgpt","input","Configuration","OpenAIApi","require","configuration","apiKey","openai","msg","completion","createChatCompletion","model","messages","role","content","response","choices","message","console","log","name","document","createTextNode","text","setText","handleClick","event","abbreviate","target","dataset","children","id","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","state","_c","$RefreshReg$"],"sources":["C:/Users/User/Downloads/MapleHacks/react-frontend/src/App.js"],"sourcesContent":["import './App.css';\r\nimport React, { useEffect, useState } from \"react\";\r\nimport USAMap from \"react-usa-map\";\r\nimport abb from \"./state_transfer\";\r\nimport data from \"./data_display\";\r\n\r\nfunction App() {\r\n  let gpt_response = \"HAIDHOWAHI\";\r\n  const [gptResult, setgptResult] = useState(\"Info From Chat Here!\");\r\n  async function callgpt(input){\r\n\r\n    const { Configuration, OpenAIApi } = require(\"openai\");\r\n  \r\n    const configuration = new Configuration({\r\n    apiKey: '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',\r\n    });\r\n    const openai = new OpenAIApi(configuration);\r\n  \r\n    const msg = input;\r\n  \r\n    const completion = await openai.createChatCompletion({\r\n    model: \"gpt-3.5-turbo\",\r\n    messages: [{role: \"user\", content: msg}],\r\n    });\r\n  \r\n    const response = completion.data.choices[0].message.content;\r\n    console.log(completion.data.choices[0].message.content);\r\n    gpt_response = response;\r\n    const name = document.createTextNode(gpt_response);\r\n    setgptResult(name);\r\n  };\r\n\r\n  const [text, setText] = useState('insert state')\r\n  const handleClick = (event) => {\r\n    let abbreviate = event.target.dataset.name;\r\n    setText(abb(abbreviate));\r\n    callgpt(abb(abbreviate)) \r\n  }\r\n  \r\n  return (\r\n    <>\r\n    <div id=\"website\"  className=\"container-center-horizontal\">\r\n      <h1 id=\"title\">Meal Mapper</h1>\r\n    </div>\r\n    <div id=\"map\">\r\n      <USAMap\r\n        onClick={handleClick}\r\n      />\r\n    </div>\r\n    <h1 id = \"gpt_result\"></h1>\r\n    <data state={text}></data>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}