{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Downloads\\\\MapleHacks\\\\react-frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport React, { useEffect, useState } from \"react\";\nimport USAMap from \"react-usa-map\";\nimport abb from \"./state_transfer\";\nimport Data from \"./data_display\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  let gpt_response = \"HAIDHOWAHI\";\n  const [a, setA] = useState(\"A\");\n  async function callgpt(input) {\n    const {\n      Configuration,\n      OpenAIApi\n    } = require(\"openai\");\n    const configuration = new Configuration({\n      apiKey: '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'\n    });\n    const openai = new OpenAIApi(configuration);\n    const msg = input;\n    const completion = await openai.createChatCompletion({\n      model: \"gpt-3.5-turbo\",\n      messages: [{\n        role: \"user\",\n        content: msg\n      }]\n    });\n    const response = completion.data.choices[0].message.content;\n    console.log(completion.data.choices[0].message.content);\n    gpt_response = response;\n    const name = document.createTextNode(gpt_response);\n    document.getElementById(\"gpt_result\").appendChild(name);\n  }\n  ;\n  const [text, setText] = useState('insert state');\n  const handleClick = event => {\n    let abbreviate = event.target.dataset.name;\n    document.getElementById('theData').scrollIntoView();\n    setText(abb(abbreviate));\n    callgpt(\"how do cows eat\");\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"head\", {\n      children: /*#__PURE__*/_jsxDEV(\"link\", {\n        href: \"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css\",\n        rel: \"stylesheet\",\n        integrity: \"sha384-GLhlTQ8iRABdZLl6O3oVMWSktQOp6b7In1Zl3/Jr59b6EGGoI1aFkw7cmDA6j6gD\",\n        crossorigin: \"anonymous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"website\",\n      className: \"container-center-horizontal\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        id: \"title\",\n        children: \"Meal Mapper\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"map\",\n      children: /*#__PURE__*/_jsxDEV(USAMap, {\n        onClick: event => handleClick()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Data, {\n      id: \"theData\",\n      state: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"3WrtpLIBclK9eqnylVld7IBxp4I=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","USAMap","abb","Data","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","gpt_response","a","setA","callgpt","input","Configuration","OpenAIApi","require","configuration","apiKey","openai","msg","completion","createChatCompletion","model","messages","role","content","response","data","choices","message","console","log","name","document","createTextNode","getElementById","appendChild","text","setText","handleClick","event","abbreviate","target","dataset","scrollIntoView","children","href","rel","integrity","crossorigin","fileName","_jsxFileName","lineNumber","columnNumber","id","className","onClick","state","_c","$RefreshReg$"],"sources":["C:/Users/User/Downloads/MapleHacks/react-frontend/src/App.js"],"sourcesContent":["import './App.css';\r\nimport React, { useEffect, useState } from \"react\";\r\nimport USAMap from \"react-usa-map\";\r\nimport abb from \"./state_transfer\";\r\nimport Data from \"./data_display\";\r\n\r\nfunction App() {\r\n  let gpt_response = \"HAIDHOWAHI\";\r\n  const [a, setA] = useState(\"A\");\r\n  async function callgpt(input){\r\n\r\n    const { Configuration, OpenAIApi } = require(\"openai\");\r\n  \r\n    const configuration = new Configuration({\r\n    apiKey: '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',\r\n    });\r\n    const openai = new OpenAIApi(configuration);\r\n  \r\n    const msg = input;\r\n  \r\n    const completion = await openai.createChatCompletion({\r\n    model: \"gpt-3.5-turbo\",\r\n    messages: [{role: \"user\", content: msg}],\r\n    });\r\n  \r\n    const response = completion.data.choices[0].message.content;\r\n    console.log(completion.data.choices[0].message.content);\r\n    gpt_response = response;\r\n    const name = document.createTextNode(gpt_response);\r\n    document.getElementById(\"gpt_result\").appendChild(name);\r\n  };\r\n\r\n  const [text, setText] = useState('insert state')\r\n  const handleClick = (event) => {\r\n    let abbreviate = event.target.dataset.name;\r\n    document.getElementById('theData').scrollIntoView();\r\n    setText(abb(abbreviate));\r\n    callgpt(\"how do cows eat\");\r\n    \r\n  }\r\n  \r\n  return (\r\n    <>\r\n    <head>\r\n      <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-GLhlTQ8iRABdZLl6O3oVMWSktQOp6b7In1Zl3/Jr59b6EGGoI1aFkw7cmDA6j6gD\" crossorigin=\"anonymous\"/>\r\n    </head>\r\n    <div id=\"website\"  className=\"container-center-horizontal\">\r\n      <h1 id=\"title\">Meal Mapper</h1>\r\n    </div>\r\n    <div id=\"map\">\r\n      <USAMap\r\n        onClick={(event) => handleClick()}\r\n      />\r\n    </div>\r\n    {/*<h1 id = \"gpt_result\"></h1>*/}\r\n    <Data id=\"theData\" state={text}></Data>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}