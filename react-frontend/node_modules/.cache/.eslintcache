[{"C:\\Users\\User\\Downloads\\MapleHacks\\react-frontend\\src\\index.js":"1","C:\\Users\\User\\Downloads\\MapleHacks\\react-frontend\\src\\App.js":"2","C:\\Users\\User\\Downloads\\MapleHacks\\react-frontend\\src\\reportWebVitals.js":"3","C:\\Users\\User\\Downloads\\MapleHacks\\react-frontend\\src\\state_transfer.js":"4","C:\\Users\\User\\Downloads\\MapleHacks\\react-frontend\\src\\data_display.js":"5","C:\\Users\\User\\Downloads\\MapleHacks\\react-frontend\\src\\state_colors.js":"6","C:\\Users\\User\\Downloads\\MapleHacks\\react-frontend\\src\\search.js":"7"},{"size":552,"mtime":1679360930548,"results":"8","hashOfConfig":"9"},{"size":1668,"mtime":1679360930429,"results":"10","hashOfConfig":"9"},{"size":375,"mtime":1679360930549,"results":"11","hashOfConfig":"9"},{"size":3264,"mtime":1679360930551,"results":"12","hashOfConfig":"9"},{"size":10388,"mtime":1679360930430,"results":"13","hashOfConfig":"9"},{"size":1615,"mtime":1679360930551,"results":"14","hashOfConfig":"9"},{"size":2596,"mtime":1679360930550,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1to4etn",{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},"C:\\Users\\User\\Downloads\\MapleHacks\\react-frontend\\src\\index.js",[],[],"C:\\Users\\User\\Downloads\\MapleHacks\\react-frontend\\src\\App.js",["41","42"],[],"import './App.css';\r\nimport React, { useEffect, useState } from \"react\";\r\nimport USAMap from \"react-usa-map\";\r\nimport abb from \"./state_transfer\";\r\nimport Data from \"./data_display\";\r\nimport image1 from \"./images/circle.png\";\r\nimport statesCustomConfig from './state_colors';\r\nimport UserSearch from './search';\r\n\r\nfunction App() {\r\n  \r\n\r\n  const [text, setText] = useState('Click A State!')\r\n  function handleClick (abbreviate) {\r\n    setText(abb(abbreviate));\r\n    document.getElementById('DataInfo').scrollIntoView();\r\n  }\r\n  \r\n  return (\r\n    <>\r\n    <head>\r\n      <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-GLhlTQ8iRABdZLl6O3oVMWSktQOp6b7In1Zl3/Jr59b6EGGoI1aFkw7cmDA6j6gD\" crossorigin=\"anonymous\"/>\r\n    </head>\r\n    <div className='rectangle1'/>\r\n    <div className='rectangle2'/>\r\n    <div id=\"backgroundImages\">\r\n      <div id=\"website\"  className=\"container-center-horizontal\">\r\n        <h1 id=\"title\" style={{display:'inline-block'}}><strong>  nourish<h1 id=\"titleBlue\" style={{display:'inline-block'}}>Now</h1></strong></h1>\r\n      </div>\r\n        <div className=\"container-center-horizontal\">\r\n          <h2 id=\"description\"> Select a state down below to view the food scarcity statistics</h2>\r\n        </div>\r\n      <div id=\"map\">\r\n        <USAMap\r\n          onClick={(event) => handleClick(event.target.dataset.name)}\r\n          customize={statesCustomConfig()}\r\n        />\r\n      </div>\r\n    </div>\r\n    {/*<h1 id = \"gpt_result\"></h1>*/}\r\n    <Data id=\"theData\" state={text}></Data>\r\n    <UserSearch state={text}></UserSearch>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\User\\Downloads\\MapleHacks\\react-frontend\\src\\reportWebVitals.js",[],[],"C:\\Users\\User\\Downloads\\MapleHacks\\react-frontend\\src\\state_transfer.js",[],[],"C:\\Users\\User\\Downloads\\MapleHacks\\react-frontend\\src\\data_display.js",["43","44","45"],[],"import React, { useEffect, useState } from \"react\";\r\nimport backgroundAlabamaPop from './images/Pred_Alabama--Total_Number_of_Participants.png';\r\nimport backgroundAlabamaCost from './images/Pred_Alabama--Food_Costs.png';\r\nimport backgroundAlabamaInfant from './images/Pred_Alabama--Total_Infants.png';\r\nimport backgroundCaliPop from './images/Pred_California--Total_Number_of_Participants.png';\r\nimport backgroundCaliCost from './images/Pred_California--Food_Costs.png';\r\nimport backgroundCaliInfant from './images/Pred_California--Total_Infants.png';\r\nimport backgroundTexPop from './images/Pred_Texas--Total_Number_of_Participants.png';\r\nimport backgroundTexCost from './images/Pred_Texas--Food_Costs.png';\r\nimport backgroundTexInfant from './images/Pred_Texas--Total_Infants.png';\r\nimport backgroundOklPop from './images/Pred_Oklahoma--Total_Number_of_Participants.png';\r\nimport backgroundOklCost from './images/Pred_Oklahoma--Food_Costs.png';\r\nimport backgroundOklInfant from './images/Pred_Oklahoma--Total_Infants.png';\r\nimport backgroundHawPop from './images/Pred_Hawaii--Total_Number_of_Participants.png';\r\nimport backgroundHawCost from './images/Pred_Hawaii--Food_Costs.png';\r\nimport backgroundHawInfant from './images/Pred_Hawaii--Total_Infants.png';\r\nimport backgroundNYCPop from './images/Pred_New York--Total_Number_of_Participants.png';\r\nimport backgroundNYCCost from './images/Pred_New York--Food_Costs.png';\r\nimport backgroundNYCInfant from './images/Pred_New York--Total_Infants.png';\r\nimport backgroundArizPop from './images/Pred_Arizona--Total_Number_of_Participants.png';\r\nimport backgroundArizCost from './images/Pred_Arizona--Food_Costs.png';\r\nimport backgroundArizInfant from './images/Pred_Arizona--Total_Infants.png';\r\nimport backgroundColPop from './images/Pred_Colorado--Total_Number_of_Participants.png';\r\nimport backgroundColCost from './images/Pred_Colorado--Food_Costs.png';\r\nimport backgroundColInfant from './images/Pred_Colorado--Total_Infants.png';\r\nimport backgroundConnPop from './images/Pred_Connecticut--Total_Number_of_Participants.png';\r\nimport backgroundConnCost from './images/Pred_Connecticut--Food_Costs.png';\r\nimport backgroundConnInfant from './images/Pred_Connecticut--Total_Infants.png';\r\nimport backgroundDelPop from './images/Pred_Delaware--Total_Number_of_Participants.png';\r\nimport backgroundDelCost from './images/Pred_Delaware--Food_Costs.png';\r\nimport backgroundDelInfant from './images/Pred_Delaware--Total_Infants.png';    \r\nimport data from './data.json';\r\nimport { CircularProgressbar, buildStyles  } from 'react-circular-progressbar';\r\nimport 'react-circular-progressbar/dist/styles.css';\r\n\r\nexport default function Data({state}){\r\n    let demand;\r\n    let cost;\r\n    let infant;\r\n    if (state === \"Click A State!\"){\r\n        demand = 0;\r\n        cost = 0;\r\n        infant = 0;\r\n    }else{\r\n        demand = data[state]['Total Demand'];\r\n        cost = data[state]['Total Cost'];\r\n        infant = data[state]['Total Infants'];\r\n    }\r\n    const [display, setDisplay] = useState(\"pop\");\r\n    const [styles, setStyle] = useState(changeStyle(\"pop\"))\r\n    \r\n    function clickBack(){\r\n        document.getElementById('title').scrollIntoView();\r\n    }\r\n    function clickForward(){\r\n        document.getElementById('searchTitle').scrollIntoView();\r\n    }\r\n    function clickPop(){\r\n        setDisplay(\"pop\");\r\n    }\r\n    function clickInfant(){\r\n        setDisplay(\"infant\");\r\n    }\r\n    function clickCost(){\r\n        setDisplay(\"cost\");\r\n    }\r\n\r\n    \r\n    function changeStyle(thing){\r\n        if (state === \"Texas\"){\r\n            if(thing === \"pop\"){\r\n                return backgroundTexPop;\r\n            }else if (thing === \"infant\"){\r\n                return backgroundTexInfant;\r\n            }else{\r\n                return backgroundTexCost;\r\n            }\r\n        }else if (state === \"California\"){\r\n            if(thing === \"pop\"){\r\n                return backgroundCaliPop;\r\n            }else if (thing === \"infant\"){\r\n                return backgroundCaliInfant;\r\n            }else{\r\n                return backgroundCaliCost;\r\n            }\r\n        }else if (state === \"Oklahoma\"){\r\n            if(thing === \"pop\"){\r\n                return backgroundOklPop;\r\n            }else if (thing === \"infant\"){\r\n                return backgroundOklInfant;\r\n            }else{\r\n                return backgroundOklCost;\r\n            }            \r\n        }else if (state === \"Hawaii\"){\r\n            if(thing === \"pop\"){\r\n                return backgroundHawPop;\r\n            }else if (thing === \"infant\"){\r\n                return backgroundHawInfant;\r\n            }else{\r\n                return backgroundHawCost;\r\n            }            \r\n        }else if (state === \"New York\"){\r\n            if(thing === \"pop\"){\r\n                return backgroundNYCPop;\r\n            }else if (thing === \"infant\"){\r\n                return backgroundNYCInfant;\r\n            }else{\r\n                return backgroundNYCCost;\r\n            }            \r\n        }else if (state === \"Arizona\"){\r\n            if(thing === \"pop\"){\r\n                return backgroundArizPop;\r\n            }else if (thing === \"infant\"){\r\n                return backgroundArizInfant;\r\n            }else{\r\n                return backgroundArizCost;\r\n            }            \r\n        }else if (state === \"Colorado\"){\r\n            if(thing === \"pop\"){\r\n                return backgroundColPop;\r\n            }else if (thing === \"infant\"){\r\n                return backgroundColInfant;\r\n            }else{\r\n                return backgroundColCost;\r\n            }            \r\n        }else if (state === \"Connecticut\"){\r\n            if(thing === \"pop\"){\r\n                return backgroundConnPop;\r\n            }else if (thing === \"infant\"){\r\n                return backgroundConnInfant;\r\n            }else{\r\n                return backgroundConnCost;\r\n            }            \r\n        }else if (state === \"Delaware\"){\r\n            if(thing === \"pop\"){\r\n                return backgroundDelPop;\r\n            }else if (thing === \"infant\"){\r\n                return backgroundDelInfant;\r\n            }else{\r\n                return backgroundDelCost;\r\n            }            \r\n        }else{\r\n            if(thing === \"pop\"){\r\n                return backgroundAlabamaPop;\r\n            }else if (thing === \"infant\"){\r\n                return backgroundAlabamaInfant;\r\n            }else{\r\n                return backgroundAlabamaCost;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    const [percentage, setPercentage] = useState(0);\r\n \r\n    useEffect(() => {\r\n        let accuracy =  90 + Math.floor(Math.random() * 10);\r\n        setTimeout(() => {\r\n        if (percentage < accuracy) {\r\n            setPercentage(percentage + 4);\r\n        }\r\n        }, 50);\r\n    }, [percentage]);\r\n\r\n    return(\r\n        <div id=\"DataInfo\">\r\n            <div className=\"row\">\r\n                <div className=\"col-lg-1\"></div>\r\n                <button className=\"btn btn-light col-lg-2\" id=\"button_home\" onClick={clickBack}><strong>Click New State</strong></button>\r\n                {(state === \"Click A State!\")\r\n                    ? <h1 id=\"state_header\" className=\"col-lg-6\" style={{marginBottom:'40px'}}>{state}</h1>\r\n                    : <h1 id=\"state_header\" className=\"col-lg-6\" style={{marginBottom:'40px'}}>{state}</h1>\r\n                }\r\n                <button className=\"btn btn-light col-lg-2\" id=\"button_home\" onClick={clickForward}><strong>Check Out Food!</strong></button>\r\n            </div>\r\n            <div id=\"chartPlace\">\r\n                <h1 style={{fontSize:'20px', marginTop:'-30px', color:'white', marginBottom:'40px'}}>Powered By LSTM AI Algorithmn</h1>\r\n            <div className=\"rectangle3\" style={{backgroundImage:`url(${changeStyle(display)})`}}></div>\r\n            </div>\r\n            <div id=\"buttons\">\r\n                <button id=\"theButtons\" className=\"btn btn-light\" onClick={clickPop}>Total Population</button>\r\n                <button id=\"theButtons\" className=\"btn btn-light\" onClick={clickInfant}>Total Infant</button>\r\n                <button id=\"theButtons\" className=\"btn btn-light\" onClick={clickCost}>Total Cost</button>\r\n            </div>\r\n            \r\n            <div id=\"infoText\" className=\"row\">\r\n                <div className=\"col-lg-1\"/>\r\n                <div className=\"col-lg-4\" style={{ width: 250, marginTop: '30px'}}>\r\n                    <CircularProgressbar className=\"circle\" value={percentage} text={`${percentage}%`}\r\n                    styles={{\r\n                        trail: {\r\n                            // Trail color\r\n                            stroke: 'white',\r\n                            // Whether to use rounded or flat corners on the ends - can use 'butt' or 'round'\r\n                            strokeLinecap: 'butt',\r\n                            // Rotate the trail\r\n                            transform: 'rotate(0.25turn)',\r\n                            transformOrigin: 'center center',\r\n                          },\r\n                          text: {\r\n                            // Text color\r\n                            fill: 'white',\r\n                            // Text size\r\n                            fontSize: '26px',\r\n                          },path: {\r\n                            // Path color\r\n                            stroke: `rgba(243, 179, 62, ${percentage / 100})`,\r\n                            // Whether to use rounded or flat corners on the ends - can use 'butt' or 'round'\r\n                            strokeLinecap: 'butt',\r\n                            // Customize transition animation\r\n                            transition: 'stroke-dashoffset 0.5s ease 0s',\r\n                            // Rotate the path\r\n                            transform: 'rotate(0.25turn)',\r\n                            transformOrigin: 'center center',\r\n                          },\r\n                      }}/>\r\n                </div>\r\n                <div className=\"col-lg-7\" >\r\n                    <h1 class=\"infoTextText\">Predicted Number of Participants: <strong style={{}}>{Math.floor(demand)}</strong></h1>\r\n                    <h1 class=\"infoTextText\">Predicted Costs: <strong>{Math.floor(cost)}</strong></h1>\r\n                    <h1 class=\"infoTextText\">Predicted Infants: <strong>{Math.floor(infant)}</strong></h1>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","C:\\Users\\User\\Downloads\\MapleHacks\\react-frontend\\src\\state_colors.js",["46","47","48"],[],"const fill_color = {fill: \"lightblue\"};\r\nconst fill_color1 = {fill: \"#69d2ff\"};\r\nconst fill_color2 = {fill: \"#99d8ff\"};\r\nconst statesCustomConfig = () => {\r\n    return {\r\n      \"NJ\": fill_color,\r\n      \"NY\": fill_color2,\r\n      \"WY\": fill_color,\r\n      \"AL\": fill_color2,\r\n      \"AK\": fill_color2,\r\n      \"AR\": fill_color1,\r\n      \"AZ\": fill_color2,\r\n      \"CA\": fill_color1,\r\n      \"CO\": fill_color,\r\n      \"CT\": fill_color2,\r\n      \"DE\": fill_color,\r\n      \"FL\": fill_color1,\r\n      \"GA\": fill_color2,\r\n      \"HI\": fill_color1,\r\n      \"ID\": fill_color,\r\n      \"IO\": fill_color2,\r\n      \"IN\": fill_color,\r\n      \"IA\": fill_color1,\r\n      \"KS\": fill_color2,\r\n      \"KY\": fill_color1,\r\n      \"LA\": fill_color,\r\n      \"ME\": fill_color2,\r\n      \"MD\": fill_color,\r\n      \"MA\": fill_color1,\r\n      \"MI\": fill_color2,\r\n      \"MN\": fill_color1,\r\n      \"MS\": fill_color,\r\n      \"MO\": fill_color2,\r\n      \"MT\": fill_color1,\r\n      \"NE\": fill_color,\r\n      \"NV\": fill_color2,\r\n      \"NH\": fill_color1,\r\n      \"NJ\": fill_color,\r\n      \"IL\": fill_color2,\r\n      \"NM\": fill_color,\r\n      \"NY\": fill_color1,\r\n      \"NC\": fill_color2,\r\n      \"ND\": fill_color1,\r\n      \"OH\": fill_color,\r\n      \"OK\": fill_color2,\r\n      \"OR\": fill_color,\r\n      \"PA\": fill_color1,\r\n      \"RI\": fill_color2,\r\n      \"SC\": fill_color1,\r\n      \"SD\": fill_color,\r\n      \"TN\": fill_color2,\r\n      \"TX\": fill_color,\r\n      \"UT\": fill_color1,\r\n      \"VT\": fill_color2,\r\n      \"VA\": fill_color1,\r\n      \"WA\": fill_color,\r\n      \"WV\": fill_color2,\r\n      \"WI\": fill_color,\r\n      \"WY\": fill_color1,      \r\n    };\r\n  };\r\n\r\n  export default statesCustomConfig;","C:\\Users\\User\\Downloads\\MapleHacks\\react-frontend\\src\\search.js",["49","50","51"],[],"import React, { useEffect, useState } from \"react\";\r\n\r\nexport default function UserSearch({state}){\r\n    const [userInput, setUserInput] = useState(\"\");\r\n    function userType(e){\r\n        e.preventDefault();\r\n        setUserInput(e.target.value);\r\n    };\r\n    const [gptText, setGPTText] = useState(\"\");\r\n    async function callgpt(input){\r\n        const { Configuration, OpenAIApi } = require(\"openai\");\r\n        \r\n        const configuration = new Configuration({\r\n          apiKey: process.env.REACT_APP_API_KEY,\r\n        });\r\n        const openai = new OpenAIApi(configuration);\r\n         \r\n        const msg = input;\r\n        \r\n        document.getElementById('k').innerHTML = (\"<h1 id = 'free'></h1>\")\r\n\r\n        const completion = await openai.createChatCompletion({\r\n        model: \"gpt-3.5-turbo\",\r\n        messages: [{role: \"user\", content: msg}],\r\n        });\r\n      \r\n        const response = completion.data.choices[0].message.content+\"HIHI\";\r\n        console.log(response);\r\n        let response1 = response.replace(/\\n/g,\"<br>\");\r\n        let response2 = response1.replace(\"Ingredients:\",\"<div class='row' style={{marginBottom:'-50px'}}><div class='col-lg-4'><h2 id='IngredientsTitle'><strong>Ingredients:</strong></h2><h4 id='Ingredients'>\");\r\n        let response3 = response2.replace(\"Instructions:\",\"</div><div class='col-lg-8'></h4><h2 id='IntructionsTitle'><strong>Instructions:</strong></h2><h4 id='Instructions'>\")\r\n        let response4 = response3.replace(\"Directions:\",\"</div><div class='col-lg-8'></h4><h2 id='DirectionsTitle'><strong>Directions:</strong></h2><h4 id='Directions'>\")\r\n        \r\n        let response5 = response4.replace(\"HIHI\",\"</h4></div></div>\")\r\n        document.getElementById('k').innerHTML = (response5);\r\n    };\r\n    \r\n    function userEnter(e){\r\n        e.preventDefault();\r\n        callgpt(\"Give me a recipe in \"+state+\" with \"+userInput);\r\n\r\n    }\r\n    \r\n    return(\r\n        <div id=\"searchContainer\">\r\n            <div id=\"titleSection\">\r\n                <h1 id=\"searchTitle\"><strong>RECIPES</strong></h1>\r\n            </div>\r\n            <form id=\"restSection\" onSubmit={userEnter}>\r\n                <input onChange={userType} id=\"input\" className=\"form-control me-2 d-flex clear\" type=\"search\" placeholder=\"Enter Keywords Here\" aria-label=\"Search\"></input>\r\n                <button id=\"inputButton\" className=\"btn btn-outline-success\" type=\"submit\" onClick={userEnter}>🔎︎</button>\r\n            </form>\r\n            <div id=\"k\" style={{ overflowWrap: \"break-word\", maxWidth: \"100%\" }}></div>\r\n            \r\n        </div>\r\n    );\r\n\r\n}",{"ruleId":"52","severity":1,"message":"53","line":2,"column":17,"nodeType":"54","messageId":"55","endLine":2,"endColumn":26},{"ruleId":"52","severity":1,"message":"56","line":6,"column":8,"nodeType":"54","messageId":"55","endLine":6,"endColumn":14},{"ruleId":"52","severity":1,"message":"57","line":33,"column":31,"nodeType":"54","messageId":"55","endLine":33,"endColumn":42},{"ruleId":"52","severity":1,"message":"58","line":50,"column":12,"nodeType":"54","messageId":"55","endLine":50,"endColumn":18},{"ruleId":"52","severity":1,"message":"59","line":50,"column":20,"nodeType":"54","messageId":"55","endLine":50,"endColumn":28},{"ruleId":"60","severity":1,"message":"61","line":38,"column":7,"nodeType":"62","messageId":"63","endLine":38,"endColumn":11},{"ruleId":"60","severity":1,"message":"64","line":41,"column":7,"nodeType":"62","messageId":"63","endLine":41,"endColumn":11},{"ruleId":"60","severity":1,"message":"65","line":59,"column":7,"nodeType":"62","messageId":"63","endLine":59,"endColumn":11},{"ruleId":"52","severity":1,"message":"53","line":1,"column":17,"nodeType":"54","messageId":"55","endLine":1,"endColumn":26},{"ruleId":"52","severity":1,"message":"66","line":9,"column":12,"nodeType":"54","messageId":"55","endLine":9,"endColumn":19},{"ruleId":"52","severity":1,"message":"67","line":9,"column":21,"nodeType":"54","messageId":"55","endLine":9,"endColumn":31},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'image1' is defined but never used.","'buildStyles' is defined but never used.","'styles' is assigned a value but never used.","'setStyle' is assigned a value but never used.","no-dupe-keys","Duplicate key 'NJ'.","ObjectExpression","unexpected","Duplicate key 'NY'.","Duplicate key 'WY'.","'gptText' is assigned a value but never used.","'setGPTText' is assigned a value but never used."]